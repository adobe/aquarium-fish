// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

syntax = "proto3";

package aquarium.v2;

import "google/protobuf/timestamp.proto";
import "aquarium/v2/options_streaming.proto";
import "aquarium/v2/options_ui.proto";

option go_package = "github.com/adobe/aquarium-fish/lib/rpc/proto/aquarium/v2;aquariumv2";

// RoleService handles role management operations
service RoleService {
  // Get list of roles
  rpc List(RoleServiceListRequest) returns (RoleServiceListResponse) {}

  // Get role by name
  rpc Get(RoleServiceGetRequest) returns (RoleServiceGetResponse) {}

  // Create new role
  rpc Create(RoleServiceCreateRequest) returns (RoleServiceCreateResponse) {}

  // Update existing role
  rpc Update(RoleServiceUpdateRequest) returns (RoleServiceUpdateResponse) {}

  // Remove role
  rpc Remove(RoleServiceRemoveRequest) returns (RoleServiceRemoveResponse) {}
}

// Role represents a role in the RBAC system
//
// Defines a role in the RBAC system with associated permissions.
message Role {
  option (ui_config) = { generate_ui: true };
  option (subscribe_config) = { permission_check: "RoleServiceGet" };

  // Unique name of the role
  string name = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  // List of permissions granted to this role
  repeated Permission permissions = 4;
}

// Permission represents a permission that can be granted to roles
//
// Defines a permission that can be granted to roles.
message Permission {
  // Resource type or specific resource ID this permission applies to
  string resource = 1;
  // Action allowed on the resource (e.g., read, write, remove)
  string action = 2;
}

message RoleServiceListRequest {}

message RoleServiceListResponse {
  bool status = 1;
  string message = 2;
  repeated Role data = 3;
}

message RoleServiceGetRequest {
  string role_name = 1;
}

message RoleServiceGetResponse {
  bool status = 1;
  string message = 2;
  Role data = 3;
}

message RoleServiceCreateRequest {
  Role role = 1;
}

message RoleServiceCreateResponse {
  bool status = 1;
  string message = 2;
  Role data = 3;
}

message RoleServiceUpdateRequest {
  Role role = 1;
}

message RoleServiceUpdateResponse {
  bool status = 1;
  string message = 2;
  Role data = 3;
}

message RoleServiceRemoveRequest {
  string role_name = 1;
}

message RoleServiceRemoveResponse {
  bool status = 1;
  string message = 2;
}
