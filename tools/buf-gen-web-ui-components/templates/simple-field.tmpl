{{define "simple-string-field" -}}
{/* Simple string field - inline layout */}
<div className="flex items-center justify-between">
  <div className="flex items-center space-x-2 min-w-0 flex-1">
    <label className="text-sm font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap">
      {{.DisplayName}}{{if not .IsOptional}} *{{end}}
    </label>
    {{- if .Comment }}
    <div className="relative group">
      <span className="cursor-help text-gray-400 hover:text-gray-600">(?)</span>
      <div className="absolute left-0 bottom-6 bg-gray-800 text-white text-xs rounded-md shadow-lg opacity-0 group-hover:opacity-100 transition-opacity z-50 pointer-events-none max-w-sm w-max p-3 min-w-64 max-h-48 overflow-y-auto">
        <pre className="whitespace-pre-wrap text-xs leading-relaxed">{{.Comment}}</pre>
      </div>
    </div>
    {{- end }}
  </div>
  <div className="flex-1 max-w-xs ml-4">
    <input
      type="text"
      value={formData.{{.JsonName}}}
      onChange={(e) => handleFieldChange('{{.JsonName}}', e.target.value)}
      disabled={isReadOnly || (mode === 'edit' && {{.NoEdit}})}
      className="w-full px-3 py-1 text-sm border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
    />
    {validationErrors.{{.JsonName}} && (
      <div className="text-xs text-red-600 dark:text-red-400 mt-1">
        {validationErrors.{{.JsonName}}}
      </div>
    )}
  </div>
</div>
{{end}}

{{define "simple-number-field" -}}
{/* Simple number field - inline layout */}
<div className="flex items-center justify-between">
  <div className="flex items-center space-x-2 min-w-0 flex-1">
    <label className="text-sm font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap">
      {{.DisplayName}}{{if not .IsOptional}} *{{end}}
    </label>
    {{- if .Comment }}
    <div className="relative group">
      <span className="cursor-help text-gray-400 hover:text-gray-600">(?)</span>
      <div className="absolute left-0 bottom-6 bg-gray-800 text-white text-xs rounded-md shadow-lg opacity-0 group-hover:opacity-100 transition-opacity z-50 pointer-events-none max-w-sm w-max p-3 min-w-64 max-h-48 overflow-y-auto">
        <pre className="whitespace-pre-wrap text-xs leading-relaxed">{{.Comment}}</pre>
      </div>
    </div>
    {{- end }}
  </div>
  <div className="flex-1 max-w-xs ml-4">
    <input
      type="number"
      value={formData.{{.JsonName}}}
      onChange={(e) => handleFieldChange('{{.JsonName}}', parseInt(e.target.value) || 0)}
      disabled={isReadOnly || (mode === 'edit' && {{.NoEdit}})}
      className="w-full px-3 py-1 text-sm border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
    />
    {validationErrors.{{.JsonName}} && (
      <div className="text-xs text-red-600 dark:text-red-400 mt-1">
        {validationErrors.{{.JsonName}}}
      </div>
    )}
  </div>
</div>
{{end}}

{{define "simple-boolean-field" -}}
{/* Boolean field - inline layout with checkbox */}
<div className="flex items-center justify-between">
  <div className="flex items-center space-x-2 min-w-0 flex-1">
    <label className="text-sm font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap">
      {{.DisplayName}}{{if not .IsOptional}} *{{end}}
    </label>
    {{- if .Comment }}
    <div className="relative group">
      <span className="cursor-help text-gray-400 hover:text-gray-600">(?)</span>
      <div className="absolute left-0 bottom-6 bg-gray-800 text-white text-xs rounded-md shadow-lg opacity-0 group-hover:opacity-100 transition-opacity z-50 pointer-events-none max-w-sm w-max p-3 min-w-64 max-h-48 overflow-y-auto">
        <pre className="whitespace-pre-wrap text-xs leading-relaxed">{{.Comment}}</pre>
      </div>
    </div>
    {{- end }}
  </div>
  <div className="flex-1 max-w-xs ml-4 flex justify-start">
    <input
      type="checkbox"
      checked={formData.{{.JsonName}}}
      onChange={(e) => handleFieldChange('{{.JsonName}}', e.target.checked)}
      disabled={isReadOnly || (mode === 'edit' && {{.NoEdit}})}
      className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
    />
    {validationErrors.{{.JsonName}} && (
      <div className="text-xs text-red-600 dark:text-red-400 mt-1 ml-2">
        {validationErrors.{{.JsonName}}}
      </div>
    )}
  </div>
</div>
{{end}}
