---
# Aquarium Fish OpenAPI specification
# Use editor: https://editor.swagger.io/
openapi: 3.0.0

servers:
  - url: https://0.0.0.0:8001/
    description: Main API available for the Users and Meta API for the ApplicationResources

info:
  description: API of the Fish node/cluster
  version: 1.0.0
  title: Aquarium Fish
  contact:
    name: Sergei Parshev
    url: 'https://github.com/adobe/aquarium-fish'
  license:
    name: Apache 2.0

externalDocs:
  url: 'https://github.com/adobe/aquarium-fish/wiki/Aquarium'

paths:
  /api/v1/applicationresource/{uid}/access:
    get:
      summary: Get SSH access credentials by ApplicationResource UID
      description: Display any known SSH access information for the ApplicationResource
      operationId: ApplicationResourceAccessPut
      tags:
        - ApplicationResource
      x-rbac:
        Administrator:
          - Access
        Power:
          - Access
      parameters:
        - name: uid
          in: path
          description: UID of the object
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceAccess'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: ApplicationResource not found
      security:
        - basic_auth: []

  /api/v1/task/{task_uid}:
    get:
      summary: Get ApplicationTask data
      description: Returns the Application Task
      operationId: ApplicationTaskGet
      tags:
        - ApplicationTask
      x-rbac:
        Administrator:
          - Get
          - GetAll
        Power:
          - Get
      parameters:
        - name: task_uid
          in: path
          description: UID of the Task
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTask'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: ApplicationTask not found
      security:
        - basic_auth: []

  /meta/v1/data/:
    get:
      summary: Get the ApplicationResource metadata
      description:
        Returns the hash of the ApplicationResource metadata (combined Label and Application metadata)
      operationId: DataGetList
      tags:
        - MetaData
      parameters:
        - name: format
          in: query
          description: Set the return format
          required: false
          schema:
            type: string
            enum:
              - json  # Regular JSON
              - env   # Plain format suitable to use as shell variables
            default: json
        - name: prefix
          in: query
          description: Additional prefix for the key path if `format=env`
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
            application/yaml:
              schema:
                type: object
            text/plain; charset=utf-8:
              schema:
                type: string
        '401':
          description: Not in controlled network or ApplicationResource with IpAddr or HwAddr not found
        '404':
          description: Key path not found

components:
  schemas:

  securitySchemes:
    basic_auth:
      type: http
      scheme: basic

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
