/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

// Code generated by Aquarium buf-gen-pb-data. DO NOT EDIT.

package aquariumv2

import (
	pbTypes "github.com/adobe/aquarium-fish/lib/rpc/proto/aquarium/v2"
)

// FieldUiConfig is a data for FieldUiConfig without internal locks
type FieldUiConfig struct {
	Autofill *string `json:"autofill,omitempty"`
	Name     *string `json:"name,omitempty"`
	Nocreate *bool   `json:"nocreate,omitempty"`
	Noedit   *bool   `json:"noedit,omitempty"`
}

// FromFieldUiConfig creates a FieldUiConfig from FieldUiConfig
func FromFieldUiConfig(src *pbTypes.FieldUiConfig) FieldUiConfig {
	if src == nil {
		return FieldUiConfig{}
	}

	result := FieldUiConfig{}
	if src.GetAutofill() != "" {
		val := src.GetAutofill()
		result.Autofill = &val
	}
	if src.GetName() != "" {
		val := src.GetName()
		result.Name = &val
	}
	if src.GetNocreate() != false {
		val := src.GetNocreate()
		result.Nocreate = &val
	}
	if src.GetNoedit() != false {
		val := src.GetNoedit()
		result.Noedit = &val
	}
	return result
}

// ToFieldUiConfig converts FieldUiConfig to FieldUiConfig
func (f FieldUiConfig) ToFieldUiConfig() *pbTypes.FieldUiConfig {
	result := &pbTypes.FieldUiConfig{}

	if f.Autofill != nil {
		result.Autofill = f.Autofill
	}
	if f.Name != nil {
		result.Name = f.Name
	}
	if f.Nocreate != nil {
		result.Nocreate = f.Nocreate
	}
	if f.Noedit != nil {
		result.Noedit = f.Noedit
	}
	return result
}

// UiConfig is a data for UiConfig without internal locks
type UiConfig struct {
	GenerateUi *bool `json:"generate_ui,omitempty"`
}

// FromUiConfig creates a UiConfig from UiConfig
func FromUiConfig(src *pbTypes.UiConfig) UiConfig {
	if src == nil {
		return UiConfig{}
	}

	result := UiConfig{}
	if src.GetGenerateUi() != false {
		val := src.GetGenerateUi()
		result.GenerateUi = &val
	}
	return result
}

// ToUiConfig converts UiConfig to UiConfig
func (u UiConfig) ToUiConfig() *pbTypes.UiConfig {
	result := &pbTypes.UiConfig{}

	if u.GenerateUi != nil {
		result.GenerateUi = u.GenerateUi
	}
	return result
}
