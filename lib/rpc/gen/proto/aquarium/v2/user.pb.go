// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aquarium/v2/user.proto

package aquariumv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User represents a user in the system
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Roles         []string               `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_aquarium_v2_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// UserWithPassword includes password for create/update operations
type UserWithPassword struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Roles         []string               `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserWithPassword) Reset() {
	*x = UserWithPassword{}
	mi := &file_aquarium_v2_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserWithPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithPassword) ProtoMessage() {}

func (x *UserWithPassword) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithPassword.ProtoReflect.Descriptor instead.
func (*UserWithPassword) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserWithPassword) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserWithPassword) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserWithPassword) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserWithPassword) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserWithPassword) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserServiceGetMeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceGetMeRequest) Reset() {
	*x = UserServiceGetMeRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceGetMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceGetMeRequest) ProtoMessage() {}

func (x *UserServiceGetMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceGetMeRequest.ProtoReflect.Descriptor instead.
func (*UserServiceGetMeRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{2}
}

type UserServiceGetMeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *User                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceGetMeResponse) Reset() {
	*x = UserServiceGetMeResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceGetMeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceGetMeResponse) ProtoMessage() {}

func (x *UserServiceGetMeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceGetMeResponse.ProtoReflect.Descriptor instead.
func (*UserServiceGetMeResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserServiceGetMeResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceGetMeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserServiceGetMeResponse) GetData() *User {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserServiceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceListRequest) Reset() {
	*x = UserServiceListRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceListRequest) ProtoMessage() {}

func (x *UserServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceListRequest.ProtoReflect.Descriptor instead.
func (*UserServiceListRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{4}
}

type UserServiceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*User                `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceListResponse) Reset() {
	*x = UserServiceListResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceListResponse) ProtoMessage() {}

func (x *UserServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceListResponse.ProtoReflect.Descriptor instead.
func (*UserServiceListResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserServiceListResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserServiceListResponse) GetData() []*User {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceGetRequest) Reset() {
	*x = UserServiceGetRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceGetRequest) ProtoMessage() {}

func (x *UserServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceGetRequest.ProtoReflect.Descriptor instead.
func (*UserServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserServiceGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *User                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceGetResponse) Reset() {
	*x = UserServiceGetResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceGetResponse) ProtoMessage() {}

func (x *UserServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceGetResponse.ProtoReflect.Descriptor instead.
func (*UserServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserServiceGetResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceGetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserServiceGetResponse) GetData() *User {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserServiceCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password      *string                `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
	Roles         []string               `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceCreateRequest) Reset() {
	*x = UserServiceCreateRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceCreateRequest) ProtoMessage() {}

func (x *UserServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*UserServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserServiceCreateRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UserServiceCreateRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserServiceCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *UserWithPassword      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceCreateResponse) Reset() {
	*x = UserServiceCreateResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceCreateResponse) ProtoMessage() {}

func (x *UserServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*UserServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{9}
}

func (x *UserServiceCreateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserServiceCreateResponse) GetData() *UserWithPassword {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserServiceUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password      *string                `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
	Roles         []string               `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceUpdateRequest) Reset() {
	*x = UserServiceUpdateRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceUpdateRequest) ProtoMessage() {}

func (x *UserServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*UserServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{10}
}

func (x *UserServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserServiceUpdateRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UserServiceUpdateRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserServiceUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *UserWithPassword      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceUpdateResponse) Reset() {
	*x = UserServiceUpdateResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceUpdateResponse) ProtoMessage() {}

func (x *UserServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*UserServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{11}
}

func (x *UserServiceUpdateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserServiceUpdateResponse) GetData() *UserWithPassword {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserServiceDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceDeleteRequest) Reset() {
	*x = UserServiceDeleteRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceDeleteRequest) ProtoMessage() {}

func (x *UserServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*UserServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{12}
}

func (x *UserServiceDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserServiceDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceDeleteResponse) Reset() {
	*x = UserServiceDeleteResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceDeleteResponse) ProtoMessage() {}

func (x *UserServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*UserServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{13}
}

func (x *UserServiceDeleteResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceDeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UserServiceAssignRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Roles         []string               `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceAssignRolesRequest) Reset() {
	*x = UserServiceAssignRolesRequest{}
	mi := &file_aquarium_v2_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceAssignRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceAssignRolesRequest) ProtoMessage() {}

func (x *UserServiceAssignRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceAssignRolesRequest.ProtoReflect.Descriptor instead.
func (*UserServiceAssignRolesRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{14}
}

func (x *UserServiceAssignRolesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserServiceAssignRolesRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserServiceAssignRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserServiceAssignRolesResponse) Reset() {
	*x = UserServiceAssignRolesResponse{}
	mi := &file_aquarium_v2_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserServiceAssignRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceAssignRolesResponse) ProtoMessage() {}

func (x *UserServiceAssignRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceAssignRolesResponse.ProtoReflect.Descriptor instead.
func (*UserServiceAssignRolesResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserServiceAssignRolesResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserServiceAssignRolesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_aquarium_v2_user_proto protoreflect.FileDescriptor

const file_aquarium_v2_user_proto_rawDesc = "" +
	"\n" +
	"\x16aquarium/v2/user.proto\x12\vaquarium.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16aquarium/v2/rbac.proto\"\xa6\x01\n" +
	"\x04User\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\"\xce\x01\n" +
	"\x10UserWithPassword\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x14\n" +
	"\x05roles\x18\x05 \x03(\tR\x05roles\"\x19\n" +
	"\x17UserServiceGetMeRequest\"s\n" +
	"\x18UserServiceGetMeResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x03 \x01(\v2\x11.aquarium.v2.UserR\x04data\"\x18\n" +
	"\x16UserServiceListRequest\"r\n" +
	"\x17UserServiceListResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x03 \x03(\v2\x11.aquarium.v2.UserR\x04data\"+\n" +
	"\x15UserServiceGetRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"q\n" +
	"\x16UserServiceGetResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x03 \x01(\v2\x11.aquarium.v2.UserR\x04data\"r\n" +
	"\x18UserServiceCreateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\bpassword\x18\x02 \x01(\tH\x00R\bpassword\x88\x01\x01\x12\x14\n" +
	"\x05roles\x18\x03 \x03(\tR\x05rolesB\v\n" +
	"\t_password\"\x80\x01\n" +
	"\x19UserServiceCreateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\x04data\x18\x03 \x01(\v2\x1d.aquarium.v2.UserWithPasswordR\x04data\"r\n" +
	"\x18UserServiceUpdateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\bpassword\x18\x02 \x01(\tH\x00R\bpassword\x88\x01\x01\x12\x14\n" +
	"\x05roles\x18\x03 \x03(\tR\x05rolesB\v\n" +
	"\t_password\"\x80\x01\n" +
	"\x19UserServiceUpdateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\x04data\x18\x03 \x01(\v2\x1d.aquarium.v2.UserWithPasswordR\x04data\".\n" +
	"\x18UserServiceDeleteRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"M\n" +
	"\x19UserServiceDeleteResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"I\n" +
	"\x1dUserServiceAssignRolesRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05roles\x18\x02 \x03(\tR\x05roles\"R\n" +
	"\x1eUserServiceAssignRolesResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xa7\x05\n" +
	"\vUserService\x12v\n" +
	"\x05GetMe\x12$.aquarium.v2.UserServiceGetMeRequest\x1a%.aquarium.v2.UserServiceGetMeResponse\" \x82\xb5\x18\x1c\x12\rAdministrator\x12\x05Power\x12\x04User\x12S\n" +
	"\x04List\x12#.aquarium.v2.UserServiceListRequest\x1a$.aquarium.v2.UserServiceListResponse\"\x00\x12P\n" +
	"\x03Get\x12\".aquarium.v2.UserServiceGetRequest\x1a#.aquarium.v2.UserServiceGetResponse\"\x00\x12Y\n" +
	"\x06Create\x12%.aquarium.v2.UserServiceCreateRequest\x1a&.aquarium.v2.UserServiceCreateResponse\"\x00\x12Y\n" +
	"\x06Update\x12%.aquarium.v2.UserServiceUpdateRequest\x1a&.aquarium.v2.UserServiceUpdateResponse\"\x00\x12Y\n" +
	"\x06Delete\x12%.aquarium.v2.UserServiceDeleteRequest\x1a&.aquarium.v2.UserServiceDeleteResponse\"\x00\x12h\n" +
	"\vAssignRoles\x12*.aquarium.v2.UserServiceAssignRolesRequest\x1a+.aquarium.v2.UserServiceAssignRolesResponse\"\x00BIZGgithub.com/adobe/aquarium-fish/lib/rpc/gen/proto/aquarium/v2;aquariumv2b\x06proto3"

var (
	file_aquarium_v2_user_proto_rawDescOnce sync.Once
	file_aquarium_v2_user_proto_rawDescData []byte
)

func file_aquarium_v2_user_proto_rawDescGZIP() []byte {
	file_aquarium_v2_user_proto_rawDescOnce.Do(func() {
		file_aquarium_v2_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aquarium_v2_user_proto_rawDesc), len(file_aquarium_v2_user_proto_rawDesc)))
	})
	return file_aquarium_v2_user_proto_rawDescData
}

var file_aquarium_v2_user_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_aquarium_v2_user_proto_goTypes = []any{
	(*User)(nil),                           // 0: aquarium.v2.User
	(*UserWithPassword)(nil),               // 1: aquarium.v2.UserWithPassword
	(*UserServiceGetMeRequest)(nil),        // 2: aquarium.v2.UserServiceGetMeRequest
	(*UserServiceGetMeResponse)(nil),       // 3: aquarium.v2.UserServiceGetMeResponse
	(*UserServiceListRequest)(nil),         // 4: aquarium.v2.UserServiceListRequest
	(*UserServiceListResponse)(nil),        // 5: aquarium.v2.UserServiceListResponse
	(*UserServiceGetRequest)(nil),          // 6: aquarium.v2.UserServiceGetRequest
	(*UserServiceGetResponse)(nil),         // 7: aquarium.v2.UserServiceGetResponse
	(*UserServiceCreateRequest)(nil),       // 8: aquarium.v2.UserServiceCreateRequest
	(*UserServiceCreateResponse)(nil),      // 9: aquarium.v2.UserServiceCreateResponse
	(*UserServiceUpdateRequest)(nil),       // 10: aquarium.v2.UserServiceUpdateRequest
	(*UserServiceUpdateResponse)(nil),      // 11: aquarium.v2.UserServiceUpdateResponse
	(*UserServiceDeleteRequest)(nil),       // 12: aquarium.v2.UserServiceDeleteRequest
	(*UserServiceDeleteResponse)(nil),      // 13: aquarium.v2.UserServiceDeleteResponse
	(*UserServiceAssignRolesRequest)(nil),  // 14: aquarium.v2.UserServiceAssignRolesRequest
	(*UserServiceAssignRolesResponse)(nil), // 15: aquarium.v2.UserServiceAssignRolesResponse
	(*timestamppb.Timestamp)(nil),          // 16: google.protobuf.Timestamp
}
var file_aquarium_v2_user_proto_depIdxs = []int32{
	16, // 0: aquarium.v2.User.created_at:type_name -> google.protobuf.Timestamp
	16, // 1: aquarium.v2.User.updated_at:type_name -> google.protobuf.Timestamp
	16, // 2: aquarium.v2.UserWithPassword.created_at:type_name -> google.protobuf.Timestamp
	16, // 3: aquarium.v2.UserWithPassword.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: aquarium.v2.UserServiceGetMeResponse.data:type_name -> aquarium.v2.User
	0,  // 5: aquarium.v2.UserServiceListResponse.data:type_name -> aquarium.v2.User
	0,  // 6: aquarium.v2.UserServiceGetResponse.data:type_name -> aquarium.v2.User
	1,  // 7: aquarium.v2.UserServiceCreateResponse.data:type_name -> aquarium.v2.UserWithPassword
	1,  // 8: aquarium.v2.UserServiceUpdateResponse.data:type_name -> aquarium.v2.UserWithPassword
	2,  // 9: aquarium.v2.UserService.GetMe:input_type -> aquarium.v2.UserServiceGetMeRequest
	4,  // 10: aquarium.v2.UserService.List:input_type -> aquarium.v2.UserServiceListRequest
	6,  // 11: aquarium.v2.UserService.Get:input_type -> aquarium.v2.UserServiceGetRequest
	8,  // 12: aquarium.v2.UserService.Create:input_type -> aquarium.v2.UserServiceCreateRequest
	10, // 13: aquarium.v2.UserService.Update:input_type -> aquarium.v2.UserServiceUpdateRequest
	12, // 14: aquarium.v2.UserService.Delete:input_type -> aquarium.v2.UserServiceDeleteRequest
	14, // 15: aquarium.v2.UserService.AssignRoles:input_type -> aquarium.v2.UserServiceAssignRolesRequest
	3,  // 16: aquarium.v2.UserService.GetMe:output_type -> aquarium.v2.UserServiceGetMeResponse
	5,  // 17: aquarium.v2.UserService.List:output_type -> aquarium.v2.UserServiceListResponse
	7,  // 18: aquarium.v2.UserService.Get:output_type -> aquarium.v2.UserServiceGetResponse
	9,  // 19: aquarium.v2.UserService.Create:output_type -> aquarium.v2.UserServiceCreateResponse
	11, // 20: aquarium.v2.UserService.Update:output_type -> aquarium.v2.UserServiceUpdateResponse
	13, // 21: aquarium.v2.UserService.Delete:output_type -> aquarium.v2.UserServiceDeleteResponse
	15, // 22: aquarium.v2.UserService.AssignRoles:output_type -> aquarium.v2.UserServiceAssignRolesResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_aquarium_v2_user_proto_init() }
func file_aquarium_v2_user_proto_init() {
	if File_aquarium_v2_user_proto != nil {
		return
	}
	file_aquarium_v2_rbac_proto_init()
	file_aquarium_v2_user_proto_msgTypes[8].OneofWrappers = []any{}
	file_aquarium_v2_user_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aquarium_v2_user_proto_rawDesc), len(file_aquarium_v2_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aquarium_v2_user_proto_goTypes,
		DependencyIndexes: file_aquarium_v2_user_proto_depIdxs,
		MessageInfos:      file_aquarium_v2_user_proto_msgTypes,
	}.Build()
	File_aquarium_v2_user_proto = out.File
	file_aquarium_v2_user_proto_goTypes = nil
	file_aquarium_v2_user_proto_depIdxs = nil
}
