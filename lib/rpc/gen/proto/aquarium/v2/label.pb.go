// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aquarium/v2/label.proto

package aquariumv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Label represents a reproducible environment configuration
type Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Definitions   []*LabelDefinition     `protobuf:"bytes,5,rep,name=definitions,proto3" json:"definitions,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Label) Reset() {
	*x = Label{}
	mi := &file_aquarium_v2_label_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{0}
}

func (x *Label) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Label) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Label) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Label) GetDefinitions() []*LabelDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *Label) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// LabelDefinition describes how to provide resources
type LabelDefinition struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Driver         string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Resources      *Resources             `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Options        *structpb.Struct       `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	Authentication *Authentication        `protobuf:"bytes,4,opt,name=authentication,proto3" json:"authentication,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LabelDefinition) Reset() {
	*x = LabelDefinition{}
	mi := &file_aquarium_v2_label_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelDefinition) ProtoMessage() {}

func (x *LabelDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelDefinition.ProtoReflect.Descriptor instead.
func (*LabelDefinition) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{1}
}

func (x *LabelDefinition) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *LabelDefinition) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *LabelDefinition) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LabelDefinition) GetAuthentication() *Authentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

// Resources defines required compute resources for a label
type Resources struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Slots         *uint32                   `protobuf:"varint,1,opt,name=slots,proto3,oneof" json:"slots,omitempty"`
	Cpu           uint32                    `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Ram           uint32                    `protobuf:"varint,3,opt,name=ram,proto3" json:"ram,omitempty"`
	Disks         map[string]*ResourcesDisk `protobuf:"bytes,4,rep,name=disks,proto3" json:"disks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Network       string                    `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	NodeFilter    []string                  `protobuf:"bytes,6,rep,name=node_filter,json=nodeFilter,proto3" json:"node_filter,omitempty"`
	Multitenancy  bool                      `protobuf:"varint,7,opt,name=multitenancy,proto3" json:"multitenancy,omitempty"`
	CpuOverbook   bool                      `protobuf:"varint,8,opt,name=cpu_overbook,json=cpuOverbook,proto3" json:"cpu_overbook,omitempty"`
	RamOverbook   bool                      `protobuf:"varint,9,opt,name=ram_overbook,json=ramOverbook,proto3" json:"ram_overbook,omitempty"`
	Lifetime      string                    `protobuf:"bytes,10,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_aquarium_v2_label_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{2}
}

func (x *Resources) GetSlots() uint32 {
	if x != nil && x.Slots != nil {
		return *x.Slots
	}
	return 0
}

func (x *Resources) GetCpu() uint32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Resources) GetRam() uint32 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *Resources) GetDisks() map[string]*ResourcesDisk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *Resources) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Resources) GetNodeFilter() []string {
	if x != nil {
		return x.NodeFilter
	}
	return nil
}

func (x *Resources) GetMultitenancy() bool {
	if x != nil {
		return x.Multitenancy
	}
	return false
}

func (x *Resources) GetCpuOverbook() bool {
	if x != nil {
		return x.CpuOverbook
	}
	return false
}

func (x *Resources) GetRamOverbook() bool {
	if x != nil {
		return x.RamOverbook
	}
	return false
}

func (x *Resources) GetLifetime() string {
	if x != nil {
		return x.Lifetime
	}
	return ""
}

// ResourcesDisk defines disk configuration
type ResourcesDisk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Size          uint32                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Reuse         bool                   `protobuf:"varint,4,opt,name=reuse,proto3" json:"reuse,omitempty"`
	Clone         string                 `protobuf:"bytes,5,opt,name=clone,proto3" json:"clone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcesDisk) Reset() {
	*x = ResourcesDisk{}
	mi := &file_aquarium_v2_label_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcesDisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesDisk) ProtoMessage() {}

func (x *ResourcesDisk) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesDisk.ProtoReflect.Descriptor instead.
func (*ResourcesDisk) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{3}
}

func (x *ResourcesDisk) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourcesDisk) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ResourcesDisk) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResourcesDisk) GetReuse() bool {
	if x != nil {
		return x.Reuse
	}
	return false
}

func (x *ResourcesDisk) GetClone() string {
	if x != nil {
		return x.Clone
	}
	return ""
}

type LabelServiceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceListRequest) Reset() {
	*x = LabelServiceListRequest{}
	mi := &file_aquarium_v2_label_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceListRequest) ProtoMessage() {}

func (x *LabelServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceListRequest.ProtoReflect.Descriptor instead.
func (*LabelServiceListRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{4}
}

type LabelServiceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*Label               `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceListResponse) Reset() {
	*x = LabelServiceListResponse{}
	mi := &file_aquarium_v2_label_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceListResponse) ProtoMessage() {}

func (x *LabelServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceListResponse.ProtoReflect.Descriptor instead.
func (*LabelServiceListResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{5}
}

func (x *LabelServiceListResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LabelServiceListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LabelServiceListResponse) GetData() []*Label {
	if x != nil {
		return x.Data
	}
	return nil
}

type LabelServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceGetRequest) Reset() {
	*x = LabelServiceGetRequest{}
	mi := &file_aquarium_v2_label_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceGetRequest) ProtoMessage() {}

func (x *LabelServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceGetRequest.ProtoReflect.Descriptor instead.
func (*LabelServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{6}
}

func (x *LabelServiceGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LabelServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *Label                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceGetResponse) Reset() {
	*x = LabelServiceGetResponse{}
	mi := &file_aquarium_v2_label_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceGetResponse) ProtoMessage() {}

func (x *LabelServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceGetResponse.ProtoReflect.Descriptor instead.
func (*LabelServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{7}
}

func (x *LabelServiceGetResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LabelServiceGetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LabelServiceGetResponse) GetData() *Label {
	if x != nil {
		return x.Data
	}
	return nil
}

type LabelServiceCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         *Label                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceCreateRequest) Reset() {
	*x = LabelServiceCreateRequest{}
	mi := &file_aquarium_v2_label_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceCreateRequest) ProtoMessage() {}

func (x *LabelServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*LabelServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{8}
}

func (x *LabelServiceCreateRequest) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type LabelServiceCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *Label                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceCreateResponse) Reset() {
	*x = LabelServiceCreateResponse{}
	mi := &file_aquarium_v2_label_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceCreateResponse) ProtoMessage() {}

func (x *LabelServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*LabelServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{9}
}

func (x *LabelServiceCreateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LabelServiceCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LabelServiceCreateResponse) GetData() *Label {
	if x != nil {
		return x.Data
	}
	return nil
}

type LabelServiceDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceDeleteRequest) Reset() {
	*x = LabelServiceDeleteRequest{}
	mi := &file_aquarium_v2_label_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceDeleteRequest) ProtoMessage() {}

func (x *LabelServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*LabelServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{10}
}

func (x *LabelServiceDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LabelServiceDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelServiceDeleteResponse) Reset() {
	*x = LabelServiceDeleteResponse{}
	mi := &file_aquarium_v2_label_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelServiceDeleteResponse) ProtoMessage() {}

func (x *LabelServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_label_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*LabelServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_label_proto_rawDescGZIP(), []int{11}
}

func (x *LabelServiceDeleteResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *LabelServiceDeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_aquarium_v2_label_proto protoreflect.FileDescriptor

const file_aquarium_v2_label_proto_rawDesc = "" +
	"\n" +
	"\x17aquarium/v2/label.proto\x12\vaquarium.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x18aquarium/v2/common.proto\x1a\x16aquarium/v2/rbac.proto\"\xf7\x01\n" +
	"\x05Label\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\x12>\n" +
	"\vdefinitions\x18\x05 \x03(\v2\x1c.aquarium.v2.LabelDefinitionR\vdefinitions\x123\n" +
	"\bmetadata\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\xd7\x01\n" +
	"\x0fLabelDefinition\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x124\n" +
	"\tresources\x18\x02 \x01(\v2\x16.aquarium.v2.ResourcesR\tresources\x121\n" +
	"\aoptions\x18\x03 \x01(\v2\x17.google.protobuf.StructR\aoptions\x12C\n" +
	"\x0eauthentication\x18\x04 \x01(\v2\x1b.aquarium.v2.AuthenticationR\x0eauthentication\"\xa4\x03\n" +
	"\tResources\x12\x19\n" +
	"\x05slots\x18\x01 \x01(\rH\x00R\x05slots\x88\x01\x01\x12\x10\n" +
	"\x03cpu\x18\x02 \x01(\rR\x03cpu\x12\x10\n" +
	"\x03ram\x18\x03 \x01(\rR\x03ram\x127\n" +
	"\x05disks\x18\x04 \x03(\v2!.aquarium.v2.Resources.DisksEntryR\x05disks\x12\x18\n" +
	"\anetwork\x18\x05 \x01(\tR\anetwork\x12\x1f\n" +
	"\vnode_filter\x18\x06 \x03(\tR\n" +
	"nodeFilter\x12\"\n" +
	"\fmultitenancy\x18\a \x01(\bR\fmultitenancy\x12!\n" +
	"\fcpu_overbook\x18\b \x01(\bR\vcpuOverbook\x12!\n" +
	"\fram_overbook\x18\t \x01(\bR\vramOverbook\x12\x1a\n" +
	"\blifetime\x18\n" +
	" \x01(\tR\blifetime\x1aT\n" +
	"\n" +
	"DisksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.aquarium.v2.ResourcesDiskR\x05value:\x028\x01B\b\n" +
	"\x06_slots\"y\n" +
	"\rResourcesDisk\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x12\n" +
	"\x04size\x18\x03 \x01(\rR\x04size\x12\x14\n" +
	"\x05reuse\x18\x04 \x01(\bR\x05reuse\x12\x14\n" +
	"\x05clone\x18\x05 \x01(\tR\x05clone\"\x19\n" +
	"\x17LabelServiceListRequest\"t\n" +
	"\x18LabelServiceListResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x04data\x18\x03 \x03(\v2\x12.aquarium.v2.LabelR\x04data\",\n" +
	"\x16LabelServiceGetRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"s\n" +
	"\x17LabelServiceGetResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x04data\x18\x03 \x01(\v2\x12.aquarium.v2.LabelR\x04data\"E\n" +
	"\x19LabelServiceCreateRequest\x12(\n" +
	"\x05label\x18\x01 \x01(\v2\x12.aquarium.v2.LabelR\x05label\"v\n" +
	"\x1aLabelServiceCreateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x04data\x18\x03 \x01(\v2\x12.aquarium.v2.LabelR\x04data\"/\n" +
	"\x19LabelServiceDeleteRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"N\n" +
	"\x1aLabelServiceDeleteResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xfd\x02\n" +
	"\fLabelService\x12_\n" +
	"\x04List\x12$.aquarium.v2.LabelServiceListRequest\x1a%.aquarium.v2.LabelServiceListResponse\"\n" +
	"\x82\xb5\x18\x06\x12\x04User\x12R\n" +
	"\x03Get\x12#.aquarium.v2.LabelServiceGetRequest\x1a$.aquarium.v2.LabelServiceGetResponse\"\x00\x12[\n" +
	"\x06Create\x12&.aquarium.v2.LabelServiceCreateRequest\x1a'.aquarium.v2.LabelServiceCreateResponse\"\x00\x12[\n" +
	"\x06Delete\x12&.aquarium.v2.LabelServiceDeleteRequest\x1a'.aquarium.v2.LabelServiceDeleteResponse\"\x00BIZGgithub.com/adobe/aquarium-fish/lib/rpc/gen/proto/aquarium/v2;aquariumv2b\x06proto3"

var (
	file_aquarium_v2_label_proto_rawDescOnce sync.Once
	file_aquarium_v2_label_proto_rawDescData []byte
)

func file_aquarium_v2_label_proto_rawDescGZIP() []byte {
	file_aquarium_v2_label_proto_rawDescOnce.Do(func() {
		file_aquarium_v2_label_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aquarium_v2_label_proto_rawDesc), len(file_aquarium_v2_label_proto_rawDesc)))
	})
	return file_aquarium_v2_label_proto_rawDescData
}

var file_aquarium_v2_label_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aquarium_v2_label_proto_goTypes = []any{
	(*Label)(nil),                      // 0: aquarium.v2.Label
	(*LabelDefinition)(nil),            // 1: aquarium.v2.LabelDefinition
	(*Resources)(nil),                  // 2: aquarium.v2.Resources
	(*ResourcesDisk)(nil),              // 3: aquarium.v2.ResourcesDisk
	(*LabelServiceListRequest)(nil),    // 4: aquarium.v2.LabelServiceListRequest
	(*LabelServiceListResponse)(nil),   // 5: aquarium.v2.LabelServiceListResponse
	(*LabelServiceGetRequest)(nil),     // 6: aquarium.v2.LabelServiceGetRequest
	(*LabelServiceGetResponse)(nil),    // 7: aquarium.v2.LabelServiceGetResponse
	(*LabelServiceCreateRequest)(nil),  // 8: aquarium.v2.LabelServiceCreateRequest
	(*LabelServiceCreateResponse)(nil), // 9: aquarium.v2.LabelServiceCreateResponse
	(*LabelServiceDeleteRequest)(nil),  // 10: aquarium.v2.LabelServiceDeleteRequest
	(*LabelServiceDeleteResponse)(nil), // 11: aquarium.v2.LabelServiceDeleteResponse
	nil,                                // 12: aquarium.v2.Resources.DisksEntry
	(*timestamppb.Timestamp)(nil),      // 13: google.protobuf.Timestamp
	(*structpb.Struct)(nil),            // 14: google.protobuf.Struct
	(*Authentication)(nil),             // 15: aquarium.v2.Authentication
}
var file_aquarium_v2_label_proto_depIdxs = []int32{
	13, // 0: aquarium.v2.Label.created_at:type_name -> google.protobuf.Timestamp
	1,  // 1: aquarium.v2.Label.definitions:type_name -> aquarium.v2.LabelDefinition
	14, // 2: aquarium.v2.Label.metadata:type_name -> google.protobuf.Struct
	2,  // 3: aquarium.v2.LabelDefinition.resources:type_name -> aquarium.v2.Resources
	14, // 4: aquarium.v2.LabelDefinition.options:type_name -> google.protobuf.Struct
	15, // 5: aquarium.v2.LabelDefinition.authentication:type_name -> aquarium.v2.Authentication
	12, // 6: aquarium.v2.Resources.disks:type_name -> aquarium.v2.Resources.DisksEntry
	0,  // 7: aquarium.v2.LabelServiceListResponse.data:type_name -> aquarium.v2.Label
	0,  // 8: aquarium.v2.LabelServiceGetResponse.data:type_name -> aquarium.v2.Label
	0,  // 9: aquarium.v2.LabelServiceCreateRequest.label:type_name -> aquarium.v2.Label
	0,  // 10: aquarium.v2.LabelServiceCreateResponse.data:type_name -> aquarium.v2.Label
	3,  // 11: aquarium.v2.Resources.DisksEntry.value:type_name -> aquarium.v2.ResourcesDisk
	4,  // 12: aquarium.v2.LabelService.List:input_type -> aquarium.v2.LabelServiceListRequest
	6,  // 13: aquarium.v2.LabelService.Get:input_type -> aquarium.v2.LabelServiceGetRequest
	8,  // 14: aquarium.v2.LabelService.Create:input_type -> aquarium.v2.LabelServiceCreateRequest
	10, // 15: aquarium.v2.LabelService.Delete:input_type -> aquarium.v2.LabelServiceDeleteRequest
	5,  // 16: aquarium.v2.LabelService.List:output_type -> aquarium.v2.LabelServiceListResponse
	7,  // 17: aquarium.v2.LabelService.Get:output_type -> aquarium.v2.LabelServiceGetResponse
	9,  // 18: aquarium.v2.LabelService.Create:output_type -> aquarium.v2.LabelServiceCreateResponse
	11, // 19: aquarium.v2.LabelService.Delete:output_type -> aquarium.v2.LabelServiceDeleteResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_aquarium_v2_label_proto_init() }
func file_aquarium_v2_label_proto_init() {
	if File_aquarium_v2_label_proto != nil {
		return
	}
	file_aquarium_v2_common_proto_init()
	file_aquarium_v2_rbac_proto_init()
	file_aquarium_v2_label_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aquarium_v2_label_proto_rawDesc), len(file_aquarium_v2_label_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aquarium_v2_label_proto_goTypes,
		DependencyIndexes: file_aquarium_v2_label_proto_depIdxs,
		MessageInfos:      file_aquarium_v2_label_proto_msgTypes,
	}.Build()
	File_aquarium_v2_label_proto = out.File
	file_aquarium_v2_label_proto_goTypes = nil
	file_aquarium_v2_label_proto_depIdxs = nil
}
