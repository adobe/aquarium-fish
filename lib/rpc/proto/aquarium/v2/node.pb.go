// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aquarium/v2/node.proto

package aquariumv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Node represents a node in the system
//
// Each node need to report it's status and ensure there is no duplications and to perform the
// cluster worker election process properly.
//
// Could be created by the node itself and updated by the same node.
type Node struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Uid       string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Unique name of the Node
	Name       string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Definition *NodeDefinition `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	// Where the Node is located
	Location string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	// External address to reach the Node from outside
	Address string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	// The node public key to verify on secondary connections and signatures
	Pubkey        []byte `protobuf:"bytes,8,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_aquarium_v2_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Node) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Node) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetDefinition() *NodeDefinition {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Node) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Node) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

// NodeDefinition contains technical information about the node
type NodeDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          *HostInfo              `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Memory        *MemoryInfo            `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu           []*CpuInfo             `protobuf:"bytes,3,rep,name=cpu,proto3" json:"cpu,omitempty"`
	Disks         map[string]*DiskUsage  `protobuf:"bytes,4,rep,name=disks,proto3" json:"disks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Nets          []*NetworkInterface    `protobuf:"bytes,5,rep,name=nets,proto3" json:"nets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeDefinition) Reset() {
	*x = NodeDefinition{}
	mi := &file_aquarium_v2_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDefinition) ProtoMessage() {}

func (x *NodeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDefinition.ProtoReflect.Descriptor instead.
func (*NodeDefinition) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{1}
}

func (x *NodeDefinition) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *NodeDefinition) GetMemory() *MemoryInfo {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *NodeDefinition) GetCpu() []*CpuInfo {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *NodeDefinition) GetDisks() map[string]*DiskUsage {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *NodeDefinition) GetNets() []*NetworkInterface {
	if x != nil {
		return x.Nets
	}
	return nil
}

// HostInfo represents host system information
type HostInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Hostname        string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os              string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Platform        string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily  string                 `protobuf:"bytes,4,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	PlatformVersion string                 `protobuf:"bytes,5,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	KernelVersion   string                 `protobuf:"bytes,6,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelArch      string                 `protobuf:"bytes,7,opt,name=kernel_arch,json=kernelArch,proto3" json:"kernel_arch,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_aquarium_v2_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{2}
}

func (x *HostInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HostInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostInfo) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *HostInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *HostInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *HostInfo) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

// MemoryInfo represents memory statistics
type MemoryInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Available     uint64                 `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Used          uint64                 `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent   float32                `protobuf:"fixed32,4,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryInfo) Reset() {
	*x = MemoryInfo{}
	mi := &file_aquarium_v2_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryInfo) ProtoMessage() {}

func (x *MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryInfo.ProtoReflect.Descriptor instead.
func (*MemoryInfo) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{3}
}

func (x *MemoryInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MemoryInfo) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *MemoryInfo) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *MemoryInfo) GetUsedPercent() float32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

// CpuInfo represents CPU information
type CpuInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           string                 `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	VendorId      string                 `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Family        string                 `protobuf:"bytes,3,opt,name=family,proto3" json:"family,omitempty"`
	Model         string                 `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Stepping      string                 `protobuf:"bytes,5,opt,name=stepping,proto3" json:"stepping,omitempty"`
	PhysicalId    string                 `protobuf:"bytes,6,opt,name=physical_id,json=physicalId,proto3" json:"physical_id,omitempty"`
	CoreId        string                 `protobuf:"bytes,7,opt,name=core_id,json=coreId,proto3" json:"core_id,omitempty"`
	Cores         int32                  `protobuf:"varint,8,opt,name=cores,proto3" json:"cores,omitempty"`
	ModelName     string                 `protobuf:"bytes,9,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Mhz           float32                `protobuf:"fixed32,10,opt,name=mhz,proto3" json:"mhz,omitempty"`
	CacheSize     string                 `protobuf:"bytes,11,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"`
	Microcode     string                 `protobuf:"bytes,12,opt,name=microcode,proto3" json:"microcode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpuInfo) Reset() {
	*x = CpuInfo{}
	mi := &file_aquarium_v2_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuInfo) ProtoMessage() {}

func (x *CpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuInfo.ProtoReflect.Descriptor instead.
func (*CpuInfo) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{4}
}

func (x *CpuInfo) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *CpuInfo) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *CpuInfo) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *CpuInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CpuInfo) GetStepping() string {
	if x != nil {
		return x.Stepping
	}
	return ""
}

func (x *CpuInfo) GetPhysicalId() string {
	if x != nil {
		return x.PhysicalId
	}
	return ""
}

func (x *CpuInfo) GetCoreId() string {
	if x != nil {
		return x.CoreId
	}
	return ""
}

func (x *CpuInfo) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CpuInfo) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *CpuInfo) GetMhz() float32 {
	if x != nil {
		return x.Mhz
	}
	return 0
}

func (x *CpuInfo) GetCacheSize() string {
	if x != nil {
		return x.CacheSize
	}
	return ""
}

func (x *CpuInfo) GetMicrocode() string {
	if x != nil {
		return x.Microcode
	}
	return ""
}

// DiskUsage represents disk usage statistics
type DiskUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Fstype        string                 `protobuf:"bytes,2,opt,name=fstype,proto3" json:"fstype,omitempty"`
	Total         uint64                 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Free          uint64                 `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Used          uint64                 `protobuf:"varint,5,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent   float32                `protobuf:"fixed32,6,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	mi := &file_aquarium_v2_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskUsage.ProtoReflect.Descriptor instead.
func (*DiskUsage) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{5}
}

func (x *DiskUsage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DiskUsage) GetFstype() string {
	if x != nil {
		return x.Fstype
	}
	return ""
}

func (x *DiskUsage) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskUsage) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *DiskUsage) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DiskUsage) GetUsedPercent() float32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

// NetworkInterface represents network interface information
type NetworkInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addrs         []string               `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Flags         []string               `protobuf:"bytes,3,rep,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterface) Reset() {
	*x = NetworkInterface{}
	mi := &file_aquarium_v2_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterface) ProtoMessage() {}

func (x *NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterface.ProtoReflect.Descriptor instead.
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterface) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *NetworkInterface) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type NodeServiceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceListRequest) Reset() {
	*x = NodeServiceListRequest{}
	mi := &file_aquarium_v2_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceListRequest) ProtoMessage() {}

func (x *NodeServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceListRequest.ProtoReflect.Descriptor instead.
func (*NodeServiceListRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{7}
}

type NodeServiceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*Node                `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceListResponse) Reset() {
	*x = NodeServiceListResponse{}
	mi := &file_aquarium_v2_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceListResponse) ProtoMessage() {}

func (x *NodeServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceListResponse.ProtoReflect.Descriptor instead.
func (*NodeServiceListResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{8}
}

func (x *NodeServiceListResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *NodeServiceListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NodeServiceListResponse) GetData() []*Node {
	if x != nil {
		return x.Data
	}
	return nil
}

type NodeServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeName      string                 `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceGetRequest) Reset() {
	*x = NodeServiceGetRequest{}
	mi := &file_aquarium_v2_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceGetRequest) ProtoMessage() {}

func (x *NodeServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceGetRequest.ProtoReflect.Descriptor instead.
func (*NodeServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{9}
}

func (x *NodeServiceGetRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type NodeServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *Node                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceGetResponse) Reset() {
	*x = NodeServiceGetResponse{}
	mi := &file_aquarium_v2_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceGetResponse) ProtoMessage() {}

func (x *NodeServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceGetResponse.ProtoReflect.Descriptor instead.
func (*NodeServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{10}
}

func (x *NodeServiceGetResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *NodeServiceGetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NodeServiceGetResponse) GetData() *Node {
	if x != nil {
		return x.Data
	}
	return nil
}

type NodeServiceGetThisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceGetThisRequest) Reset() {
	*x = NodeServiceGetThisRequest{}
	mi := &file_aquarium_v2_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceGetThisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceGetThisRequest) ProtoMessage() {}

func (x *NodeServiceGetThisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceGetThisRequest.ProtoReflect.Descriptor instead.
func (*NodeServiceGetThisRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{11}
}

type NodeServiceGetThisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *Node                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceGetThisResponse) Reset() {
	*x = NodeServiceGetThisResponse{}
	mi := &file_aquarium_v2_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceGetThisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceGetThisResponse) ProtoMessage() {}

func (x *NodeServiceGetThisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceGetThisResponse.ProtoReflect.Descriptor instead.
func (*NodeServiceGetThisResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{12}
}

func (x *NodeServiceGetThisResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *NodeServiceGetThisResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NodeServiceGetThisResponse) GetData() *Node {
	if x != nil {
		return x.Data
	}
	return nil
}

type NodeServiceSetMaintenanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable or disable maintenance mode
	Maintenance *bool `protobuf:"varint,1,opt,name=maintenance,proto3,oneof" json:"maintenance,omitempty"`
	// Safely stops the Node. It will wait in maintenance mode until all the Applicaions are
	// done and then exit. If Node deployed as a service - then will be restarted immediately,
	// otherwise will just stop. Could be cancelled by stop=false.
	Shutdown *bool `protobuf:"varint,2,opt,name=shutdown,proto3,oneof" json:"shutdown,omitempty"`
	// How much Node should wait in maintenance mode before exit (ex. "1h10m30s")
	ShutdownDelay *string `protobuf:"bytes,3,opt,name=shutdown_delay,json=shutdownDelay,proto3,oneof" json:"shutdown_delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceSetMaintenanceRequest) Reset() {
	*x = NodeServiceSetMaintenanceRequest{}
	mi := &file_aquarium_v2_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceSetMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceSetMaintenanceRequest) ProtoMessage() {}

func (x *NodeServiceSetMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceSetMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*NodeServiceSetMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{13}
}

func (x *NodeServiceSetMaintenanceRequest) GetMaintenance() bool {
	if x != nil && x.Maintenance != nil {
		return *x.Maintenance
	}
	return false
}

func (x *NodeServiceSetMaintenanceRequest) GetShutdown() bool {
	if x != nil && x.Shutdown != nil {
		return *x.Shutdown
	}
	return false
}

func (x *NodeServiceSetMaintenanceRequest) GetShutdownDelay() string {
	if x != nil && x.ShutdownDelay != nil {
		return *x.ShutdownDelay
	}
	return ""
}

type NodeServiceSetMaintenanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeServiceSetMaintenanceResponse) Reset() {
	*x = NodeServiceSetMaintenanceResponse{}
	mi := &file_aquarium_v2_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeServiceSetMaintenanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeServiceSetMaintenanceResponse) ProtoMessage() {}

func (x *NodeServiceSetMaintenanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeServiceSetMaintenanceResponse.ProtoReflect.Descriptor instead.
func (*NodeServiceSetMaintenanceResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_node_proto_rawDescGZIP(), []int{14}
}

func (x *NodeServiceSetMaintenanceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *NodeServiceSetMaintenanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_aquarium_v2_node_proto protoreflect.FileDescriptor

const file_aquarium_v2_node_proto_rawDesc = "" +
	"\n" +
	"\x16aquarium/v2/node.proto\x12\vaquarium.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#aquarium/v2/options_streaming.proto\"\xc3\x02\n" +
	"\x04Node\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12;\n" +
	"\n" +
	"definition\x18\x05 \x01(\v2\x1b.aquarium.v2.NodeDefinitionR\n" +
	"definition\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x12\x18\n" +
	"\aaddress\x18\a \x01(\tR\aaddress\x12\x16\n" +
	"\x06pubkey\x18\b \x01(\fR\x06pubkey:\x14\x8a\xb5\x18\x10\n" +
	"\x0eNodeServiceGet\"\xd7\x02\n" +
	"\x0eNodeDefinition\x12)\n" +
	"\x04host\x18\x01 \x01(\v2\x15.aquarium.v2.HostInfoR\x04host\x12/\n" +
	"\x06memory\x18\x02 \x01(\v2\x17.aquarium.v2.MemoryInfoR\x06memory\x12&\n" +
	"\x03cpu\x18\x03 \x03(\v2\x14.aquarium.v2.CpuInfoR\x03cpu\x12<\n" +
	"\x05disks\x18\x04 \x03(\v2&.aquarium.v2.NodeDefinition.DisksEntryR\x05disks\x121\n" +
	"\x04nets\x18\x05 \x03(\v2\x1d.aquarium.v2.NetworkInterfaceR\x04nets\x1aP\n" +
	"\n" +
	"DisksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.aquarium.v2.DiskUsageR\x05value:\x028\x01\"\xee\x01\n" +
	"\bHostInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12'\n" +
	"\x0fplatform_family\x18\x04 \x01(\tR\x0eplatformFamily\x12)\n" +
	"\x10platform_version\x18\x05 \x01(\tR\x0fplatformVersion\x12%\n" +
	"\x0ekernel_version\x18\x06 \x01(\tR\rkernelVersion\x12\x1f\n" +
	"\vkernel_arch\x18\a \x01(\tR\n" +
	"kernelArch\"w\n" +
	"\n" +
	"MemoryInfo\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x04R\x05total\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\x04R\tavailable\x12\x12\n" +
	"\x04used\x18\x03 \x01(\x04R\x04used\x12!\n" +
	"\fused_percent\x18\x04 \x01(\x02R\vusedPercent\"\xc0\x02\n" +
	"\aCpuInfo\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\tR\x03cpu\x12\x1b\n" +
	"\tvendor_id\x18\x02 \x01(\tR\bvendorId\x12\x16\n" +
	"\x06family\x18\x03 \x01(\tR\x06family\x12\x14\n" +
	"\x05model\x18\x04 \x01(\tR\x05model\x12\x1a\n" +
	"\bstepping\x18\x05 \x01(\tR\bstepping\x12\x1f\n" +
	"\vphysical_id\x18\x06 \x01(\tR\n" +
	"physicalId\x12\x17\n" +
	"\acore_id\x18\a \x01(\tR\x06coreId\x12\x14\n" +
	"\x05cores\x18\b \x01(\x05R\x05cores\x12\x1d\n" +
	"\n" +
	"model_name\x18\t \x01(\tR\tmodelName\x12\x10\n" +
	"\x03mhz\x18\n" +
	" \x01(\x02R\x03mhz\x12\x1d\n" +
	"\n" +
	"cache_size\x18\v \x01(\tR\tcacheSize\x12\x1c\n" +
	"\tmicrocode\x18\f \x01(\tR\tmicrocode\"\x98\x01\n" +
	"\tDiskUsage\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06fstype\x18\x02 \x01(\tR\x06fstype\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12\x12\n" +
	"\x04free\x18\x04 \x01(\x04R\x04free\x12\x12\n" +
	"\x04used\x18\x05 \x01(\x04R\x04used\x12!\n" +
	"\fused_percent\x18\x06 \x01(\x02R\vusedPercent\"R\n" +
	"\x10NetworkInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05addrs\x18\x02 \x03(\tR\x05addrs\x12\x14\n" +
	"\x05flags\x18\x03 \x03(\tR\x05flags\"\x18\n" +
	"\x16NodeServiceListRequest\"r\n" +
	"\x17NodeServiceListResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x03 \x03(\v2\x11.aquarium.v2.NodeR\x04data\"4\n" +
	"\x15NodeServiceGetRequest\x12\x1b\n" +
	"\tnode_name\x18\x01 \x01(\tR\bnodeName\"q\n" +
	"\x16NodeServiceGetResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x03 \x01(\v2\x11.aquarium.v2.NodeR\x04data\"\x1b\n" +
	"\x19NodeServiceGetThisRequest\"u\n" +
	"\x1aNodeServiceGetThisResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x03 \x01(\v2\x11.aquarium.v2.NodeR\x04data\"\xc6\x01\n" +
	" NodeServiceSetMaintenanceRequest\x12%\n" +
	"\vmaintenance\x18\x01 \x01(\bH\x00R\vmaintenance\x88\x01\x01\x12\x1f\n" +
	"\bshutdown\x18\x02 \x01(\bH\x01R\bshutdown\x88\x01\x01\x12*\n" +
	"\x0eshutdown_delay\x18\x03 \x01(\tH\x02R\rshutdownDelay\x88\x01\x01B\x0e\n" +
	"\f_maintenanceB\v\n" +
	"\t_shutdownB\x11\n" +
	"\x0f_shutdown_delay\"U\n" +
	"!NodeServiceSetMaintenanceResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x85\x03\n" +
	"\vNodeService\x12S\n" +
	"\x04List\x12#.aquarium.v2.NodeServiceListRequest\x1a$.aquarium.v2.NodeServiceListResponse\"\x00\x12P\n" +
	"\x03Get\x12\".aquarium.v2.NodeServiceGetRequest\x1a#.aquarium.v2.NodeServiceGetResponse\"\x00\x12\\\n" +
	"\aGetThis\x12&.aquarium.v2.NodeServiceGetThisRequest\x1a'.aquarium.v2.NodeServiceGetThisResponse\"\x00\x12q\n" +
	"\x0eSetMaintenance\x12-.aquarium.v2.NodeServiceSetMaintenanceRequest\x1a..aquarium.v2.NodeServiceSetMaintenanceResponse\"\x00BEZCgithub.com/adobe/aquarium-fish/lib/rpc/proto/aquarium/v2;aquariumv2b\x06proto3"

var (
	file_aquarium_v2_node_proto_rawDescOnce sync.Once
	file_aquarium_v2_node_proto_rawDescData []byte
)

func file_aquarium_v2_node_proto_rawDescGZIP() []byte {
	file_aquarium_v2_node_proto_rawDescOnce.Do(func() {
		file_aquarium_v2_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aquarium_v2_node_proto_rawDesc), len(file_aquarium_v2_node_proto_rawDesc)))
	})
	return file_aquarium_v2_node_proto_rawDescData
}

var file_aquarium_v2_node_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_aquarium_v2_node_proto_goTypes = []any{
	(*Node)(nil),                              // 0: aquarium.v2.Node
	(*NodeDefinition)(nil),                    // 1: aquarium.v2.NodeDefinition
	(*HostInfo)(nil),                          // 2: aquarium.v2.HostInfo
	(*MemoryInfo)(nil),                        // 3: aquarium.v2.MemoryInfo
	(*CpuInfo)(nil),                           // 4: aquarium.v2.CpuInfo
	(*DiskUsage)(nil),                         // 5: aquarium.v2.DiskUsage
	(*NetworkInterface)(nil),                  // 6: aquarium.v2.NetworkInterface
	(*NodeServiceListRequest)(nil),            // 7: aquarium.v2.NodeServiceListRequest
	(*NodeServiceListResponse)(nil),           // 8: aquarium.v2.NodeServiceListResponse
	(*NodeServiceGetRequest)(nil),             // 9: aquarium.v2.NodeServiceGetRequest
	(*NodeServiceGetResponse)(nil),            // 10: aquarium.v2.NodeServiceGetResponse
	(*NodeServiceGetThisRequest)(nil),         // 11: aquarium.v2.NodeServiceGetThisRequest
	(*NodeServiceGetThisResponse)(nil),        // 12: aquarium.v2.NodeServiceGetThisResponse
	(*NodeServiceSetMaintenanceRequest)(nil),  // 13: aquarium.v2.NodeServiceSetMaintenanceRequest
	(*NodeServiceSetMaintenanceResponse)(nil), // 14: aquarium.v2.NodeServiceSetMaintenanceResponse
	nil,                           // 15: aquarium.v2.NodeDefinition.DisksEntry
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_aquarium_v2_node_proto_depIdxs = []int32{
	16, // 0: aquarium.v2.Node.created_at:type_name -> google.protobuf.Timestamp
	16, // 1: aquarium.v2.Node.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: aquarium.v2.Node.definition:type_name -> aquarium.v2.NodeDefinition
	2,  // 3: aquarium.v2.NodeDefinition.host:type_name -> aquarium.v2.HostInfo
	3,  // 4: aquarium.v2.NodeDefinition.memory:type_name -> aquarium.v2.MemoryInfo
	4,  // 5: aquarium.v2.NodeDefinition.cpu:type_name -> aquarium.v2.CpuInfo
	15, // 6: aquarium.v2.NodeDefinition.disks:type_name -> aquarium.v2.NodeDefinition.DisksEntry
	6,  // 7: aquarium.v2.NodeDefinition.nets:type_name -> aquarium.v2.NetworkInterface
	0,  // 8: aquarium.v2.NodeServiceListResponse.data:type_name -> aquarium.v2.Node
	0,  // 9: aquarium.v2.NodeServiceGetResponse.data:type_name -> aquarium.v2.Node
	0,  // 10: aquarium.v2.NodeServiceGetThisResponse.data:type_name -> aquarium.v2.Node
	5,  // 11: aquarium.v2.NodeDefinition.DisksEntry.value:type_name -> aquarium.v2.DiskUsage
	7,  // 12: aquarium.v2.NodeService.List:input_type -> aquarium.v2.NodeServiceListRequest
	9,  // 13: aquarium.v2.NodeService.Get:input_type -> aquarium.v2.NodeServiceGetRequest
	11, // 14: aquarium.v2.NodeService.GetThis:input_type -> aquarium.v2.NodeServiceGetThisRequest
	13, // 15: aquarium.v2.NodeService.SetMaintenance:input_type -> aquarium.v2.NodeServiceSetMaintenanceRequest
	8,  // 16: aquarium.v2.NodeService.List:output_type -> aquarium.v2.NodeServiceListResponse
	10, // 17: aquarium.v2.NodeService.Get:output_type -> aquarium.v2.NodeServiceGetResponse
	12, // 18: aquarium.v2.NodeService.GetThis:output_type -> aquarium.v2.NodeServiceGetThisResponse
	14, // 19: aquarium.v2.NodeService.SetMaintenance:output_type -> aquarium.v2.NodeServiceSetMaintenanceResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_aquarium_v2_node_proto_init() }
func file_aquarium_v2_node_proto_init() {
	if File_aquarium_v2_node_proto != nil {
		return
	}
	file_aquarium_v2_options_streaming_proto_init()
	file_aquarium_v2_node_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aquarium_v2_node_proto_rawDesc), len(file_aquarium_v2_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aquarium_v2_node_proto_goTypes,
		DependencyIndexes: file_aquarium_v2_node_proto_depIdxs,
		MessageInfos:      file_aquarium_v2_node_proto_msgTypes,
	}.Build()
	File_aquarium_v2_node_proto = out.File
	file_aquarium_v2_node_proto_goTypes = nil
	file_aquarium_v2_node_proto_depIdxs = nil
}
