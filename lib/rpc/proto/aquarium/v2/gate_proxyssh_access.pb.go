// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aquarium/v2/gate_proxyssh_access.proto

package aquariumv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProxySSHAccess represents user accessor to connect to the ApplciationResource.
//
// An accessor entry to be able to identify and look up different (currently running) Resource.
//
// Used to enable SSH pass-through in ProxySSH Gate.
type GateProxySSHAccess struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Uid                    string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ApplicationResourceUid string                 `protobuf:"bytes,3,opt,name=application_resource_uid,json=applicationResourceUid,proto3" json:"application_resource_uid,omitempty"`
	// Address of the closest ProxySSH node (host:port) to help user to connect.
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// The username to use when logging into the fish node.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// The password to use when logging into the fish node.
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	// SSH key could be used instead of password to access the system.
	Key           string `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GateProxySSHAccess) Reset() {
	*x = GateProxySSHAccess{}
	mi := &file_aquarium_v2_gate_proxyssh_access_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GateProxySSHAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateProxySSHAccess) ProtoMessage() {}

func (x *GateProxySSHAccess) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_gate_proxyssh_access_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateProxySSHAccess.ProtoReflect.Descriptor instead.
func (*GateProxySSHAccess) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_gate_proxyssh_access_proto_rawDescGZIP(), []int{0}
}

func (x *GateProxySSHAccess) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GateProxySSHAccess) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GateProxySSHAccess) GetApplicationResourceUid() string {
	if x != nil {
		return x.ApplicationResourceUid
	}
	return ""
}

func (x *GateProxySSHAccess) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GateProxySSHAccess) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GateProxySSHAccess) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GateProxySSHAccess) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GateProxySSHServiceGetResourceAccessRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ApplicationResourceUid string                 `protobuf:"bytes,1,opt,name=application_resource_uid,json=applicationResourceUid,proto3" json:"application_resource_uid,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GateProxySSHServiceGetResourceAccessRequest) Reset() {
	*x = GateProxySSHServiceGetResourceAccessRequest{}
	mi := &file_aquarium_v2_gate_proxyssh_access_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GateProxySSHServiceGetResourceAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateProxySSHServiceGetResourceAccessRequest) ProtoMessage() {}

func (x *GateProxySSHServiceGetResourceAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_gate_proxyssh_access_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateProxySSHServiceGetResourceAccessRequest.ProtoReflect.Descriptor instead.
func (*GateProxySSHServiceGetResourceAccessRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_gate_proxyssh_access_proto_rawDescGZIP(), []int{1}
}

func (x *GateProxySSHServiceGetResourceAccessRequest) GetApplicationResourceUid() string {
	if x != nil {
		return x.ApplicationResourceUid
	}
	return ""
}

type GateProxySSHServiceGetResourceAccessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *GateProxySSHAccess    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GateProxySSHServiceGetResourceAccessResponse) Reset() {
	*x = GateProxySSHServiceGetResourceAccessResponse{}
	mi := &file_aquarium_v2_gate_proxyssh_access_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GateProxySSHServiceGetResourceAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateProxySSHServiceGetResourceAccessResponse) ProtoMessage() {}

func (x *GateProxySSHServiceGetResourceAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_gate_proxyssh_access_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateProxySSHServiceGetResourceAccessResponse.ProtoReflect.Descriptor instead.
func (*GateProxySSHServiceGetResourceAccessResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_gate_proxyssh_access_proto_rawDescGZIP(), []int{2}
}

func (x *GateProxySSHServiceGetResourceAccessResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GateProxySSHServiceGetResourceAccessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GateProxySSHServiceGetResourceAccessResponse) GetData() *GateProxySSHAccess {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_aquarium_v2_gate_proxyssh_access_proto protoreflect.FileDescriptor

const file_aquarium_v2_gate_proxyssh_access_proto_rawDesc = "" +
	"\n" +
	"&aquarium/v2/gate_proxyssh_access.proto\x12\vaquarium.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16aquarium/v2/rbac.proto\"\xff\x01\n" +
	"\x12GateProxySSHAccess\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\x18application_resource_uid\x18\x03 \x01(\tR\x16applicationResourceUid\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x12\x10\n" +
	"\x03key\x18\a \x01(\tR\x03key\"g\n" +
	"+GateProxySSHServiceGetResourceAccessRequest\x128\n" +
	"\x18application_resource_uid\x18\x01 \x01(\tR\x16applicationResourceUid\"\x95\x01\n" +
	",GateProxySSHServiceGetResourceAccessResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x123\n" +
	"\x04data\x18\x03 \x01(\v2\x1f.aquarium.v2.GateProxySSHAccessR\x04data2\xc3\x01\n" +
	"\x13GateProxySSHService\x12\xab\x01\n" +
	"\x11GetResourceAccess\x128.aquarium.v2.GateProxySSHServiceGetResourceAccessRequest\x1a9.aquarium.v2.GateProxySSHServiceGetResourceAccessResponse\"!\x82\xb5\x18\x1d\x1a\x05Power\"\x14GetResourceAccessAllBEZCgithub.com/adobe/aquarium-fish/lib/rpc/proto/aquarium/v2;aquariumv2b\x06proto3"

var (
	file_aquarium_v2_gate_proxyssh_access_proto_rawDescOnce sync.Once
	file_aquarium_v2_gate_proxyssh_access_proto_rawDescData []byte
)

func file_aquarium_v2_gate_proxyssh_access_proto_rawDescGZIP() []byte {
	file_aquarium_v2_gate_proxyssh_access_proto_rawDescOnce.Do(func() {
		file_aquarium_v2_gate_proxyssh_access_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aquarium_v2_gate_proxyssh_access_proto_rawDesc), len(file_aquarium_v2_gate_proxyssh_access_proto_rawDesc)))
	})
	return file_aquarium_v2_gate_proxyssh_access_proto_rawDescData
}

var file_aquarium_v2_gate_proxyssh_access_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_aquarium_v2_gate_proxyssh_access_proto_goTypes = []any{
	(*GateProxySSHAccess)(nil),                           // 0: aquarium.v2.GateProxySSHAccess
	(*GateProxySSHServiceGetResourceAccessRequest)(nil),  // 1: aquarium.v2.GateProxySSHServiceGetResourceAccessRequest
	(*GateProxySSHServiceGetResourceAccessResponse)(nil), // 2: aquarium.v2.GateProxySSHServiceGetResourceAccessResponse
	(*timestamppb.Timestamp)(nil),                        // 3: google.protobuf.Timestamp
}
var file_aquarium_v2_gate_proxyssh_access_proto_depIdxs = []int32{
	3, // 0: aquarium.v2.GateProxySSHAccess.created_at:type_name -> google.protobuf.Timestamp
	0, // 1: aquarium.v2.GateProxySSHServiceGetResourceAccessResponse.data:type_name -> aquarium.v2.GateProxySSHAccess
	1, // 2: aquarium.v2.GateProxySSHService.GetResourceAccess:input_type -> aquarium.v2.GateProxySSHServiceGetResourceAccessRequest
	2, // 3: aquarium.v2.GateProxySSHService.GetResourceAccess:output_type -> aquarium.v2.GateProxySSHServiceGetResourceAccessResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_aquarium_v2_gate_proxyssh_access_proto_init() }
func file_aquarium_v2_gate_proxyssh_access_proto_init() {
	if File_aquarium_v2_gate_proxyssh_access_proto != nil {
		return
	}
	file_aquarium_v2_rbac_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aquarium_v2_gate_proxyssh_access_proto_rawDesc), len(file_aquarium_v2_gate_proxyssh_access_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aquarium_v2_gate_proxyssh_access_proto_goTypes,
		DependencyIndexes: file_aquarium_v2_gate_proxyssh_access_proto_depIdxs,
		MessageInfos:      file_aquarium_v2_gate_proxyssh_access_proto_msgTypes,
	}.Build()
	File_aquarium_v2_gate_proxyssh_access_proto = out.File
	file_aquarium_v2_gate_proxyssh_access_proto_goTypes = nil
	file_aquarium_v2_gate_proxyssh_access_proto_depIdxs = nil
}
