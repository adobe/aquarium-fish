// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aquarium/v2/auth.proto

package aquariumv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JWT token response containing the token and metadata
type JWTToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The JWT token string
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Token expiration time
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Refresh token for getting new access tokens
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// Refresh token expiration time
	RefreshExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=refresh_expires_at,json=refreshExpiresAt,proto3" json:"refresh_expires_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JWTToken) Reset() {
	*x = JWTToken{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JWTToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTToken) ProtoMessage() {}

func (x *JWTToken) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTToken.ProtoReflect.Descriptor instead.
func (*JWTToken) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{0}
}

func (x *JWTToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTToken) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *JWTToken) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *JWTToken) GetRefreshExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshExpiresAt
	}
	return nil
}

// Complete user session information
type UserSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User name
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// User roles
	Roles []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	// User permissions from roles
	Permissions []*Permission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Session metadata
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserSession) Reset() {
	*x = UserSession{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSession) ProtoMessage() {}

func (x *UserSession) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSession.ProtoReflect.Descriptor instead.
func (*UserSession) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{1}
}

func (x *UserSession) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserSession) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserSession) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UserSession) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserSession) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type AuthServiceLoginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Username for authentication
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password for authentication
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceLoginRequest) Reset() {
	*x = AuthServiceLoginRequest{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceLoginRequest) ProtoMessage() {}

func (x *AuthServiceLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceLoginRequest.ProtoReflect.Descriptor instead.
func (*AuthServiceLoginRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{2}
}

func (x *AuthServiceLoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthServiceLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthServiceLoginResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Status  bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// JWT token information if login successful
	Token *JWTToken `protobuf:"bytes,3,opt,name=token,proto3,oneof" json:"token,omitempty"`
	// User session information if login successful
	Session       *UserSession `protobuf:"bytes,4,opt,name=session,proto3,oneof" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceLoginResponse) Reset() {
	*x = AuthServiceLoginResponse{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceLoginResponse) ProtoMessage() {}

func (x *AuthServiceLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceLoginResponse.ProtoReflect.Descriptor instead.
func (*AuthServiceLoginResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{3}
}

func (x *AuthServiceLoginResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AuthServiceLoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthServiceLoginResponse) GetToken() *JWTToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AuthServiceLoginResponse) GetSession() *UserSession {
	if x != nil {
		return x.Session
	}
	return nil
}

type AuthServiceRefreshTokenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Refresh token to use for getting new access token
	RefreshToken  string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceRefreshTokenRequest) Reset() {
	*x = AuthServiceRefreshTokenRequest{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceRefreshTokenRequest) ProtoMessage() {}

func (x *AuthServiceRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*AuthServiceRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{4}
}

func (x *AuthServiceRefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type AuthServiceRefreshTokenResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Status  bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// New JWT token if refresh successful
	Token         *JWTToken `protobuf:"bytes,3,opt,name=token,proto3,oneof" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceRefreshTokenResponse) Reset() {
	*x = AuthServiceRefreshTokenResponse{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceRefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceRefreshTokenResponse) ProtoMessage() {}

func (x *AuthServiceRefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceRefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*AuthServiceRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{5}
}

func (x *AuthServiceRefreshTokenResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AuthServiceRefreshTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthServiceRefreshTokenResponse) GetToken() *JWTToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type AuthServiceGetPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceGetPermissionsRequest) Reset() {
	*x = AuthServiceGetPermissionsRequest{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceGetPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceGetPermissionsRequest) ProtoMessage() {}

func (x *AuthServiceGetPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceGetPermissionsRequest.ProtoReflect.Descriptor instead.
func (*AuthServiceGetPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{6}
}

type AuthServiceGetPermissionsResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Status  bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// User session information including permissions
	Session       *UserSession `protobuf:"bytes,3,opt,name=session,proto3,oneof" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceGetPermissionsResponse) Reset() {
	*x = AuthServiceGetPermissionsResponse{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceGetPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceGetPermissionsResponse) ProtoMessage() {}

func (x *AuthServiceGetPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceGetPermissionsResponse.ProtoReflect.Descriptor instead.
func (*AuthServiceGetPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{7}
}

func (x *AuthServiceGetPermissionsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AuthServiceGetPermissionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthServiceGetPermissionsResponse) GetSession() *UserSession {
	if x != nil {
		return x.Session
	}
	return nil
}

type AuthServiceValidateTokenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JWT token to validate
	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceValidateTokenRequest) Reset() {
	*x = AuthServiceValidateTokenRequest{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceValidateTokenRequest) ProtoMessage() {}

func (x *AuthServiceValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*AuthServiceValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{8}
}

func (x *AuthServiceValidateTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AuthServiceValidateTokenResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Status  bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// User session information if token is valid
	Session       *UserSession `protobuf:"bytes,3,opt,name=session,proto3,oneof" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthServiceValidateTokenResponse) Reset() {
	*x = AuthServiceValidateTokenResponse{}
	mi := &file_aquarium_v2_auth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthServiceValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthServiceValidateTokenResponse) ProtoMessage() {}

func (x *AuthServiceValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_auth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthServiceValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*AuthServiceValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_auth_proto_rawDescGZIP(), []int{9}
}

func (x *AuthServiceValidateTokenResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AuthServiceValidateTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthServiceValidateTokenResponse) GetSession() *UserSession {
	if x != nil {
		return x.Session
	}
	return nil
}

var File_aquarium_v2_auth_proto protoreflect.FileDescriptor

const file_aquarium_v2_auth_proto_rawDesc = "" +
	"\n" +
	"\x16aquarium/v2/auth.proto\x12\vaquarium.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x16aquarium/v2/role.proto\x1a\x1eaquarium/v2/options_rbac.proto\x1a#aquarium/v2/options_streaming.proto\"\xca\x01\n" +
	"\bJWTToken\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\x12H\n" +
	"\x12refresh_expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x10refreshExpiresAt\"\xef\x01\n" +
	"\vUserSession\x12\x1b\n" +
	"\tuser_name\x18\x01 \x01(\tR\buserName\x12\x14\n" +
	"\x05roles\x18\x02 \x03(\tR\x05roles\x129\n" +
	"\vpermissions\x18\x03 \x03(\v2\x17.aquarium.v2.PermissionR\vpermissions\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\tlast_used\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastUsed\"Q\n" +
	"\x17AuthServiceLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xcd\x01\n" +
	"\x18AuthServiceLoginResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x05token\x18\x03 \x01(\v2\x15.aquarium.v2.JWTTokenH\x00R\x05token\x88\x01\x01\x127\n" +
	"\asession\x18\x04 \x01(\v2\x18.aquarium.v2.UserSessionH\x01R\asession\x88\x01\x01B\b\n" +
	"\x06_tokenB\n" +
	"\n" +
	"\b_session\"E\n" +
	"\x1eAuthServiceRefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\"\x8f\x01\n" +
	"\x1fAuthServiceRefreshTokenResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x05token\x18\x03 \x01(\v2\x15.aquarium.v2.JWTTokenH\x00R\x05token\x88\x01\x01B\b\n" +
	"\x06_token\"\"\n" +
	" AuthServiceGetPermissionsRequest\"\x9a\x01\n" +
	"!AuthServiceGetPermissionsResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\asession\x18\x03 \x01(\v2\x18.aquarium.v2.UserSessionH\x00R\asession\x88\x01\x01B\n" +
	"\n" +
	"\b_session\"7\n" +
	"\x1fAuthServiceValidateTokenRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x99\x01\n" +
	" AuthServiceValidateTokenResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\asession\x18\x03 \x01(\v2\x18.aquarium.v2.UserSessionH\x00R\asession\x88\x01\x01B\n" +
	"\n" +
	"\b_session2\xd3\x03\n" +
	"\vAuthService\x12\\\n" +
	"\x05Login\x12$.aquarium.v2.AuthServiceLoginRequest\x1a%.aquarium.v2.AuthServiceLoginResponse\"\x06\x82\xb5\x18\x02\b\x01\x12t\n" +
	"\rValidateToken\x12,.aquarium.v2.AuthServiceValidateTokenRequest\x1a-.aquarium.v2.AuthServiceValidateTokenResponse\"\x06\x82\xb5\x18\x02\b\x01\x12q\n" +
	"\fRefreshToken\x12+.aquarium.v2.AuthServiceRefreshTokenRequest\x1a,.aquarium.v2.AuthServiceRefreshTokenResponse\"\x06\x82\xb5\x18\x02\x10\x01\x12w\n" +
	"\x0eGetPermissions\x12-.aquarium.v2.AuthServiceGetPermissionsRequest\x1a..aquarium.v2.AuthServiceGetPermissionsResponse\"\x06\x82\xb5\x18\x02\x10\x01\x1a\x04\x90\xb5\x18\x01BEZCgithub.com/adobe/aquarium-fish/lib/rpc/proto/aquarium/v2;aquariumv2b\x06proto3"

var (
	file_aquarium_v2_auth_proto_rawDescOnce sync.Once
	file_aquarium_v2_auth_proto_rawDescData []byte
)

func file_aquarium_v2_auth_proto_rawDescGZIP() []byte {
	file_aquarium_v2_auth_proto_rawDescOnce.Do(func() {
		file_aquarium_v2_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aquarium_v2_auth_proto_rawDesc), len(file_aquarium_v2_auth_proto_rawDesc)))
	})
	return file_aquarium_v2_auth_proto_rawDescData
}

var file_aquarium_v2_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_aquarium_v2_auth_proto_goTypes = []any{
	(*JWTToken)(nil),                          // 0: aquarium.v2.JWTToken
	(*UserSession)(nil),                       // 1: aquarium.v2.UserSession
	(*AuthServiceLoginRequest)(nil),           // 2: aquarium.v2.AuthServiceLoginRequest
	(*AuthServiceLoginResponse)(nil),          // 3: aquarium.v2.AuthServiceLoginResponse
	(*AuthServiceRefreshTokenRequest)(nil),    // 4: aquarium.v2.AuthServiceRefreshTokenRequest
	(*AuthServiceRefreshTokenResponse)(nil),   // 5: aquarium.v2.AuthServiceRefreshTokenResponse
	(*AuthServiceGetPermissionsRequest)(nil),  // 6: aquarium.v2.AuthServiceGetPermissionsRequest
	(*AuthServiceGetPermissionsResponse)(nil), // 7: aquarium.v2.AuthServiceGetPermissionsResponse
	(*AuthServiceValidateTokenRequest)(nil),   // 8: aquarium.v2.AuthServiceValidateTokenRequest
	(*AuthServiceValidateTokenResponse)(nil),  // 9: aquarium.v2.AuthServiceValidateTokenResponse
	(*timestamppb.Timestamp)(nil),             // 10: google.protobuf.Timestamp
	(*Permission)(nil),                        // 11: aquarium.v2.Permission
}
var file_aquarium_v2_auth_proto_depIdxs = []int32{
	10, // 0: aquarium.v2.JWTToken.expires_at:type_name -> google.protobuf.Timestamp
	10, // 1: aquarium.v2.JWTToken.refresh_expires_at:type_name -> google.protobuf.Timestamp
	11, // 2: aquarium.v2.UserSession.permissions:type_name -> aquarium.v2.Permission
	10, // 3: aquarium.v2.UserSession.created_at:type_name -> google.protobuf.Timestamp
	10, // 4: aquarium.v2.UserSession.last_used:type_name -> google.protobuf.Timestamp
	0,  // 5: aquarium.v2.AuthServiceLoginResponse.token:type_name -> aquarium.v2.JWTToken
	1,  // 6: aquarium.v2.AuthServiceLoginResponse.session:type_name -> aquarium.v2.UserSession
	0,  // 7: aquarium.v2.AuthServiceRefreshTokenResponse.token:type_name -> aquarium.v2.JWTToken
	1,  // 8: aquarium.v2.AuthServiceGetPermissionsResponse.session:type_name -> aquarium.v2.UserSession
	1,  // 9: aquarium.v2.AuthServiceValidateTokenResponse.session:type_name -> aquarium.v2.UserSession
	2,  // 10: aquarium.v2.AuthService.Login:input_type -> aquarium.v2.AuthServiceLoginRequest
	8,  // 11: aquarium.v2.AuthService.ValidateToken:input_type -> aquarium.v2.AuthServiceValidateTokenRequest
	4,  // 12: aquarium.v2.AuthService.RefreshToken:input_type -> aquarium.v2.AuthServiceRefreshTokenRequest
	6,  // 13: aquarium.v2.AuthService.GetPermissions:input_type -> aquarium.v2.AuthServiceGetPermissionsRequest
	3,  // 14: aquarium.v2.AuthService.Login:output_type -> aquarium.v2.AuthServiceLoginResponse
	9,  // 15: aquarium.v2.AuthService.ValidateToken:output_type -> aquarium.v2.AuthServiceValidateTokenResponse
	5,  // 16: aquarium.v2.AuthService.RefreshToken:output_type -> aquarium.v2.AuthServiceRefreshTokenResponse
	7,  // 17: aquarium.v2.AuthService.GetPermissions:output_type -> aquarium.v2.AuthServiceGetPermissionsResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_aquarium_v2_auth_proto_init() }
func file_aquarium_v2_auth_proto_init() {
	if File_aquarium_v2_auth_proto != nil {
		return
	}
	file_aquarium_v2_role_proto_init()
	file_aquarium_v2_options_rbac_proto_init()
	file_aquarium_v2_options_streaming_proto_init()
	file_aquarium_v2_auth_proto_msgTypes[3].OneofWrappers = []any{}
	file_aquarium_v2_auth_proto_msgTypes[5].OneofWrappers = []any{}
	file_aquarium_v2_auth_proto_msgTypes[7].OneofWrappers = []any{}
	file_aquarium_v2_auth_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aquarium_v2_auth_proto_rawDesc), len(file_aquarium_v2_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aquarium_v2_auth_proto_goTypes,
		DependencyIndexes: file_aquarium_v2_auth_proto_depIdxs,
		MessageInfos:      file_aquarium_v2_auth_proto_msgTypes,
	}.Build()
	File_aquarium_v2_auth_proto = out.File
	file_aquarium_v2_auth_proto_goTypes = nil
	file_aquarium_v2_auth_proto_depIdxs = nil
}
