// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aquarium/v2/application.proto

package aquariumv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for ApplicationState status field
type ApplicationState_Status int32

const (
	ApplicationState_UNSPECIFIED ApplicationState_Status = 0 // Should not happen during regular operation
	ApplicationState_NEW         ApplicationState_Status = 1 // The Application just created (active)
	ApplicationState_ELECTED     ApplicationState_Status = 2 // Node is elected during the voting process (active)
	ApplicationState_ALLOCATED   ApplicationState_Status = 3 // The ApplicationResource is allocated and starting up (active)
	ApplicationState_DEALLOCATE  ApplicationState_Status = 4 // User requested the Application deallocate (not active)
	ApplicationState_DEALLOCATED ApplicationState_Status = 5 // The ApplicationResource is deallocated (not active)
	ApplicationState_ERROR       ApplicationState_Status = 6 // The error happened (not active)
)

// Enum value maps for ApplicationState_Status.
var (
	ApplicationState_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NEW",
		2: "ELECTED",
		3: "ALLOCATED",
		4: "DEALLOCATE",
		5: "DEALLOCATED",
		6: "ERROR",
	}
	ApplicationState_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"NEW":         1,
		"ELECTED":     2,
		"ALLOCATED":   3,
		"DEALLOCATE":  4,
		"DEALLOCATED": 5,
		"ERROR":       6,
	}
)

func (x ApplicationState_Status) Enum() *ApplicationState_Status {
	p := new(ApplicationState_Status)
	*p = x
	return p
}

func (x ApplicationState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aquarium_v2_application_proto_enumTypes[0].Descriptor()
}

func (ApplicationState_Status) Type() protoreflect.EnumType {
	return &file_aquarium_v2_application_proto_enumTypes[0]
}

func (x ApplicationState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationState_Status.Descriptor instead.
func (ApplicationState_Status) EnumDescriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{1, 0}
}

// Application represents an allocation request
//
// Allocation request created by the user. Each node votes for the availability to allocate
// the ApplicationResource and the cluster choose which one node will actually do the work.
type Application struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Uid       string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	OwnerName string                 `protobuf:"bytes,3,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	LabelUid  string                 `protobuf:"bytes,4,opt,name=label_uid,json=labelUid,proto3" json:"label_uid,omitempty"`
	// Additional metadata in JSON format (can't override Label metadata)
	// example:
	//
	//	JENKINS_URL: 'http://172.16.1.1:8085/'
	//	JENKINS_AGENT_SECRET: 03839eabcf945b1e780be8f9488d264c4c57bf388546da9a84588345555f29b0
	//	JENKINS_AGENT_NAME: test-node
	Metadata      *structpb.Struct `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_aquarium_v2_application_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Application) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Application) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Application) GetLabelUid() string {
	if x != nil {
		return x.LabelUid
	}
	return ""
}

func (x *Application) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ApplicationState represents the current state of an application
//
// The state of the Application - it goes through graph of states, so this object stores the
// info when the Application comes to this state and the last one describes the current state
// of the Application.
type ApplicationState struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Uid            string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ApplicationUid string                 `protobuf:"bytes,3,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	// Status of the state - everything starts with new and could end in 2 states: DEALLOCATED or ERROR
	Status ApplicationState_Status `protobuf:"varint,4,opt,name=status,proto3,enum=aquarium.v2.ApplicationState_Status" json:"status,omitempty"`
	// Additional information for the state
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationState) Reset() {
	*x = ApplicationState{}
	mi := &file_aquarium_v2_application_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationState) ProtoMessage() {}

func (x *ApplicationState) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationState.ProtoReflect.Descriptor instead.
func (*ApplicationState) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationState) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ApplicationState) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ApplicationState) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

func (x *ApplicationState) GetStatus() ApplicationState_Status {
	if x != nil {
		return x.Status
	}
	return ApplicationState_UNSPECIFIED
}

func (x *ApplicationState) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// ApplicationResource represents a managed instance
//
// Managed instance definition to be able to properly restore the state during the cluster
// node restart. Also contains additional info about the instance, for example user requested
// metadata, which is available for the instance through the `Meta API`.
//
// Could be created and updated only by the node which won the Application execution.
type ApplicationResource struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Uid             string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ApplicationUid  string                 `protobuf:"bytes,4,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	NodeUid         string                 `protobuf:"bytes,5,opt,name=node_uid,json=nodeUid,proto3" json:"node_uid,omitempty"`
	LabelUid        string                 `protobuf:"bytes,6,opt,name=label_uid,json=labelUid,proto3" json:"label_uid,omitempty"`
	DefinitionIndex int32                  `protobuf:"varint,7,opt,name=definition_index,json=definitionIndex,proto3" json:"definition_index,omitempty"`
	// Unique for driver identifier of the instance which can be used to find it later.
	Identifier string `protobuf:"bytes,8,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Is a weak current network IP address of the instance, usually gathered based on the `hw_addr`.
	IpAddr string `protobuf:"bytes,9,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	// MAC or any other type of network address which will allow to properly identify the node
	// through network interaction.
	HwAddr string `protobuf:"bytes,10,opt,name=hw_addr,json=hwAddr,proto3" json:"hw_addr,omitempty"`
	// Combined Application and Label metadata (in this order) to make it available through
	// `Meta API` to the instance.
	// example:
	//
	//	JENKINS_URL: 'http://172.16.1.1:8085/'
	//	JENKINS_AGENT_SECRET: 03839eabcf945b1e780be8f9488d264c4c57bf388546da9a84588345555f29b0
	//	JENKINS_AGENT_NAME: test-node
	//	JENKINS_AGENT_WORKSPACE: /Volumes/ws
	Metadata *structpb.Struct `protobuf:"bytes,11,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Calculated during allocation time of when the Resource have to die anyway
	Timeout *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	// Authentication information for connection.
	Authentication *Authentication `protobuf:"bytes,13,opt,name=authentication,proto3,oneof" json:"authentication,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationResource) Reset() {
	*x = ApplicationResource{}
	mi := &file_aquarium_v2_application_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationResource) ProtoMessage() {}

func (x *ApplicationResource) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationResource.ProtoReflect.Descriptor instead.
func (*ApplicationResource) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationResource) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ApplicationResource) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ApplicationResource) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ApplicationResource) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

func (x *ApplicationResource) GetNodeUid() string {
	if x != nil {
		return x.NodeUid
	}
	return ""
}

func (x *ApplicationResource) GetLabelUid() string {
	if x != nil {
		return x.LabelUid
	}
	return ""
}

func (x *ApplicationResource) GetDefinitionIndex() int32 {
	if x != nil {
		return x.DefinitionIndex
	}
	return 0
}

func (x *ApplicationResource) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ApplicationResource) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *ApplicationResource) GetHwAddr() string {
	if x != nil {
		return x.HwAddr
	}
	return ""
}

func (x *ApplicationResource) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ApplicationResource) GetTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ApplicationResource) GetAuthentication() *Authentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

// ApplicationTask represents an async action on an application
//
// Is needed to execute sort of async action on the Application. For example snapshot
// operation, because the request could get from anywhere. Usually app tasks are not a part of
// standard Application state graph and could be not executed if the Applicationresource is
// destroyed.
//
// Results are filled by the executor of the task and really depends on what kind of operation
// is executed and really depends on the driver - it could support the task or not.
//
// It could be created by any Node but updated by the one which won the Application execution.
type ApplicationTask struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Uid            string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ApplicationUid string                 `protobuf:"bytes,4,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	// Identifier of the task
	Task string `protobuf:"bytes,5,opt,name=task,proto3" json:"task,omitempty"`
	// Used to specify when the task should be executed, right now only
	// ALLOCATED, DEALLOCATE (when app is already here) are supported.
	When ApplicationState_Status `protobuf:"varint,6,opt,name=when,proto3,enum=aquarium.v2.ApplicationState_Status" json:"when,omitempty"`
	// Struct with additional options specific for the driver
	Options *structpb.Struct `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// Struct with the results of task execution
	Result        *structpb.Struct `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationTask) Reset() {
	*x = ApplicationTask{}
	mi := &file_aquarium_v2_application_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationTask) ProtoMessage() {}

func (x *ApplicationTask) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationTask.ProtoReflect.Descriptor instead.
func (*ApplicationTask) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationTask) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ApplicationTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ApplicationTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ApplicationTask) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

func (x *ApplicationTask) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *ApplicationTask) GetWhen() ApplicationState_Status {
	if x != nil {
		return x.When
	}
	return ApplicationState_UNSPECIFIED
}

func (x *ApplicationTask) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ApplicationTask) GetResult() *structpb.Struct {
	if x != nil {
		return x.Result
	}
	return nil
}

type ApplicationServiceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceListRequest) Reset() {
	*x = ApplicationServiceListRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListRequest) ProtoMessage() {}

func (x *ApplicationServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{4}
}

type ApplicationServiceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*Application         `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceListResponse) Reset() {
	*x = ApplicationServiceListResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListResponse) ProtoMessage() {}

func (x *ApplicationServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{5}
}

func (x *ApplicationServiceListResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceListResponse) GetData() []*Application {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceGetRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceGetRequest) Reset() {
	*x = ApplicationServiceGetRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetRequest) ProtoMessage() {}

func (x *ApplicationServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{6}
}

func (x *ApplicationServiceGetRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

type ApplicationServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *Application           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceGetResponse) Reset() {
	*x = ApplicationServiceGetResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetResponse) ProtoMessage() {}

func (x *ApplicationServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationServiceGetResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceGetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceGetResponse) GetData() *Application {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Application   *Application           `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceCreateRequest) Reset() {
	*x = ApplicationServiceCreateRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceCreateRequest) ProtoMessage() {}

func (x *ApplicationServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicationServiceCreateRequest) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

type ApplicationServiceCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *Application           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceCreateResponse) Reset() {
	*x = ApplicationServiceCreateResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceCreateResponse) ProtoMessage() {}

func (x *ApplicationServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{9}
}

func (x *ApplicationServiceCreateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceCreateResponse) GetData() *Application {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceListStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceListStateRequest) Reset() {
	*x = ApplicationServiceListStateRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListStateRequest) ProtoMessage() {}

func (x *ApplicationServiceListStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListStateRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListStateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{10}
}

type ApplicationServiceListStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*ApplicationState    `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceListStateResponse) Reset() {
	*x = ApplicationServiceListStateResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListStateResponse) ProtoMessage() {}

func (x *ApplicationServiceListStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListStateResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListStateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationServiceListStateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceListStateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceListStateResponse) GetData() []*ApplicationState {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceGetStateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceGetStateRequest) Reset() {
	*x = ApplicationServiceGetStateRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetStateRequest) ProtoMessage() {}

func (x *ApplicationServiceGetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetStateRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetStateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{12}
}

func (x *ApplicationServiceGetStateRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

type ApplicationServiceGetStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApplicationState      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceGetStateResponse) Reset() {
	*x = ApplicationServiceGetStateResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetStateResponse) ProtoMessage() {}

func (x *ApplicationServiceGetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetStateResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetStateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{13}
}

func (x *ApplicationServiceGetStateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceGetStateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceGetStateResponse) GetData() *ApplicationState {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceListResourceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceListResourceRequest) Reset() {
	*x = ApplicationServiceListResourceRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListResourceRequest) ProtoMessage() {}

func (x *ApplicationServiceListResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListResourceRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListResourceRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{14}
}

func (x *ApplicationServiceListResourceRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

type ApplicationServiceListResourceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*ApplicationResource `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceListResourceResponse) Reset() {
	*x = ApplicationServiceListResourceResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListResourceResponse) ProtoMessage() {}

func (x *ApplicationServiceListResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListResourceResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListResourceResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{15}
}

func (x *ApplicationServiceListResourceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceListResourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceListResourceResponse) GetData() []*ApplicationResource {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceGetResourceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceGetResourceRequest) Reset() {
	*x = ApplicationServiceGetResourceRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetResourceRequest) ProtoMessage() {}

func (x *ApplicationServiceGetResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetResourceRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetResourceRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{16}
}

func (x *ApplicationServiceGetResourceRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

type ApplicationServiceGetResourceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApplicationResource   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceGetResourceResponse) Reset() {
	*x = ApplicationServiceGetResourceResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetResourceResponse) ProtoMessage() {}

func (x *ApplicationServiceGetResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetResourceResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetResourceResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{17}
}

func (x *ApplicationServiceGetResourceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceGetResourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceGetResourceResponse) GetData() *ApplicationResource {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceListTaskRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceListTaskRequest) Reset() {
	*x = ApplicationServiceListTaskRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListTaskRequest) ProtoMessage() {}

func (x *ApplicationServiceListTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListTaskRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListTaskRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{18}
}

func (x *ApplicationServiceListTaskRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

type ApplicationServiceListTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*ApplicationTask     `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceListTaskResponse) Reset() {
	*x = ApplicationServiceListTaskResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceListTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceListTaskResponse) ProtoMessage() {}

func (x *ApplicationServiceListTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceListTaskResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceListTaskResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{19}
}

func (x *ApplicationServiceListTaskResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceListTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceListTaskResponse) GetData() []*ApplicationTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceCreateTaskRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	Task           *ApplicationTask       `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceCreateTaskRequest) Reset() {
	*x = ApplicationServiceCreateTaskRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceCreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceCreateTaskRequest) ProtoMessage() {}

func (x *ApplicationServiceCreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceCreateTaskRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceCreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{20}
}

func (x *ApplicationServiceCreateTaskRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

func (x *ApplicationServiceCreateTaskRequest) GetTask() *ApplicationTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type ApplicationServiceCreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApplicationTask       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceCreateTaskResponse) Reset() {
	*x = ApplicationServiceCreateTaskResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceCreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceCreateTaskResponse) ProtoMessage() {}

func (x *ApplicationServiceCreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceCreateTaskResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceCreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{21}
}

func (x *ApplicationServiceCreateTaskResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceCreateTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceCreateTaskResponse) GetData() *ApplicationTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceGetTaskRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ApplicationTaskUid string                 `protobuf:"bytes,1,opt,name=application_task_uid,json=applicationTaskUid,proto3" json:"application_task_uid,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ApplicationServiceGetTaskRequest) Reset() {
	*x = ApplicationServiceGetTaskRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetTaskRequest) ProtoMessage() {}

func (x *ApplicationServiceGetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetTaskRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetTaskRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{22}
}

func (x *ApplicationServiceGetTaskRequest) GetApplicationTaskUid() string {
	if x != nil {
		return x.ApplicationTaskUid
	}
	return ""
}

type ApplicationServiceGetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ApplicationTask       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceGetTaskResponse) Reset() {
	*x = ApplicationServiceGetTaskResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceGetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceGetTaskResponse) ProtoMessage() {}

func (x *ApplicationServiceGetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceGetTaskResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceGetTaskResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{23}
}

func (x *ApplicationServiceGetTaskResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceGetTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationServiceGetTaskResponse) GetData() *ApplicationTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApplicationServiceDeallocateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationUid string                 `protobuf:"bytes,1,opt,name=application_uid,json=applicationUid,proto3" json:"application_uid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationServiceDeallocateRequest) Reset() {
	*x = ApplicationServiceDeallocateRequest{}
	mi := &file_aquarium_v2_application_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceDeallocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceDeallocateRequest) ProtoMessage() {}

func (x *ApplicationServiceDeallocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceDeallocateRequest.ProtoReflect.Descriptor instead.
func (*ApplicationServiceDeallocateRequest) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{24}
}

func (x *ApplicationServiceDeallocateRequest) GetApplicationUid() string {
	if x != nil {
		return x.ApplicationUid
	}
	return ""
}

type ApplicationServiceDeallocateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationServiceDeallocateResponse) Reset() {
	*x = ApplicationServiceDeallocateResponse{}
	mi := &file_aquarium_v2_application_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationServiceDeallocateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationServiceDeallocateResponse) ProtoMessage() {}

func (x *ApplicationServiceDeallocateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aquarium_v2_application_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationServiceDeallocateResponse.ProtoReflect.Descriptor instead.
func (*ApplicationServiceDeallocateResponse) Descriptor() ([]byte, []int) {
	return file_aquarium_v2_application_proto_rawDescGZIP(), []int{25}
}

func (x *ApplicationServiceDeallocateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ApplicationServiceDeallocateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_aquarium_v2_application_proto protoreflect.FileDescriptor

const file_aquarium_v2_application_proto_rawDesc = "" +
	"\n" +
	"\x1daquarium/v2/application.proto\x12\vaquarium.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x18aquarium/v2/common.proto\x1a\x1eaquarium/v2/options_rbac.proto\x1a#aquarium/v2/options_streaming.proto\x1a\x1caquarium/v2/options_ui.proto\"\xa0\x02\n" +
	"\vApplication\x12\x1a\n" +
	"\x03uid\x18\x01 \x01(\tB\b\x9a\xb5\x18\x04\b\x01\x10\x01R\x03uid\x12C\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\b\x9a\xb5\x18\x04\b\x01\x10\x01R\tcreatedAt\x12'\n" +
	"\n" +
	"owner_name\x18\x03 \x01(\tB\b\x9a\xb5\x18\x04\b\x01\x10\x01R\townerName\x12/\n" +
	"\tlabel_uid\x18\x04 \x01(\tB\x12\x9a\xb5\x18\x0e\x1a\x05Label\"\x05LabelR\blabelUid\x123\n" +
	"\bmetadata\x18\x05 \x01(\v2\x17.google.protobuf.StructR\bmetadata:!\x8a\xb5\x18\x17\n" +
	"\x15ApplicationServiceGet\x92\xb5\x18\x02\b\x01\"\xf6\x02\n" +
	"\x10ApplicationState\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12'\n" +
	"\x0fapplication_uid\x18\x03 \x01(\tR\x0eapplicationUid\x12<\n" +
	"\x06status\x18\x04 \x01(\x0e2$.aquarium.v2.ApplicationState.StatusR\x06status\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"j\n" +
	"\x06Status\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\a\n" +
	"\x03NEW\x10\x01\x12\v\n" +
	"\aELECTED\x10\x02\x12\r\n" +
	"\tALLOCATED\x10\x03\x12\x0e\n" +
	"\n" +
	"DEALLOCATE\x10\x04\x12\x0f\n" +
	"\vDEALLOCATED\x10\x05\x12\t\n" +
	"\x05ERROR\x10\x06: \x8a\xb5\x18\x1c\n" +
	"\x1aApplicationServiceGetState\"\x9d\x05\n" +
	"\x13ApplicationResource\x12\x1a\n" +
	"\x03uid\x18\x01 \x01(\tB\b\x9a\xb5\x18\x04\b\x01\x10\x01R\x03uid\x12C\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\b\x9a\xb5\x18\x04\b\x01\x10\x01R\tcreatedAt\x12C\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\b\x9a\xb5\x18\x04\b\x01\x10\x01R\tupdatedAt\x12'\n" +
	"\x0fapplication_uid\x18\x04 \x01(\tR\x0eapplicationUid\x12\x19\n" +
	"\bnode_uid\x18\x05 \x01(\tR\anodeUid\x12\x1b\n" +
	"\tlabel_uid\x18\x06 \x01(\tR\blabelUid\x12)\n" +
	"\x10definition_index\x18\a \x01(\x05R\x0fdefinitionIndex\x12\x1e\n" +
	"\n" +
	"identifier\x18\b \x01(\tR\n" +
	"identifier\x12\x17\n" +
	"\aip_addr\x18\t \x01(\tR\x06ipAddr\x12\x17\n" +
	"\ahw_addr\x18\n" +
	" \x01(\tR\x06hwAddr\x123\n" +
	"\bmetadata\x18\v \x01(\v2\x17.google.protobuf.StructR\bmetadata\x129\n" +
	"\atimeout\x18\f \x01(\v2\x1a.google.protobuf.TimestampH\x00R\atimeout\x88\x01\x01\x12H\n" +
	"\x0eauthentication\x18\r \x01(\v2\x1b.aquarium.v2.AuthenticationH\x01R\x0eauthentication\x88\x01\x01:)\x8a\xb5\x18\x1f\n" +
	"\x1dApplicationServiceGetResource\x92\xb5\x18\x02\b\x01B\n" +
	"\n" +
	"\b_timeoutB\x11\n" +
	"\x0f_authentication\"\x95\x03\n" +
	"\x0fApplicationTask\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12'\n" +
	"\x0fapplication_uid\x18\x04 \x01(\tR\x0eapplicationUid\x12\x12\n" +
	"\x04task\x18\x05 \x01(\tR\x04task\x128\n" +
	"\x04when\x18\x06 \x01(\x0e2$.aquarium.v2.ApplicationState.StatusR\x04when\x121\n" +
	"\aoptions\x18\a \x01(\v2\x17.google.protobuf.StructR\aoptions\x12/\n" +
	"\x06result\x18\b \x01(\v2\x17.google.protobuf.StructR\x06result:\x1f\x8a\xb5\x18\x1b\n" +
	"\x19ApplicationServiceGetTask\"\x1f\n" +
	"\x1dApplicationServiceListRequest\"\x80\x01\n" +
	"\x1eApplicationServiceListResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\x04data\x18\x03 \x03(\v2\x18.aquarium.v2.ApplicationR\x04data\"G\n" +
	"\x1cApplicationServiceGetRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\"\x7f\n" +
	"\x1dApplicationServiceGetResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\x04data\x18\x03 \x01(\v2\x18.aquarium.v2.ApplicationR\x04data\"]\n" +
	"\x1fApplicationServiceCreateRequest\x12:\n" +
	"\vapplication\x18\x01 \x01(\v2\x18.aquarium.v2.ApplicationR\vapplication\"\x82\x01\n" +
	" ApplicationServiceCreateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\x04data\x18\x03 \x01(\v2\x18.aquarium.v2.ApplicationR\x04data\"$\n" +
	"\"ApplicationServiceListStateRequest\"\x8a\x01\n" +
	"#ApplicationServiceListStateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\x04data\x18\x03 \x03(\v2\x1d.aquarium.v2.ApplicationStateR\x04data\"L\n" +
	"!ApplicationServiceGetStateRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\"\x89\x01\n" +
	"\"ApplicationServiceGetStateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\x04data\x18\x03 \x01(\v2\x1d.aquarium.v2.ApplicationStateR\x04data\"P\n" +
	"%ApplicationServiceListResourceRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\"\x90\x01\n" +
	"&ApplicationServiceListResourceResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\x04data\x18\x03 \x03(\v2 .aquarium.v2.ApplicationResourceR\x04data\"O\n" +
	"$ApplicationServiceGetResourceRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\"\x8f\x01\n" +
	"%ApplicationServiceGetResourceResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\x04data\x18\x03 \x01(\v2 .aquarium.v2.ApplicationResourceR\x04data\"L\n" +
	"!ApplicationServiceListTaskRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\"\x88\x01\n" +
	"\"ApplicationServiceListTaskResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x04data\x18\x03 \x03(\v2\x1c.aquarium.v2.ApplicationTaskR\x04data\"\x80\x01\n" +
	"#ApplicationServiceCreateTaskRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\x120\n" +
	"\x04task\x18\x02 \x01(\v2\x1c.aquarium.v2.ApplicationTaskR\x04task\"\x8a\x01\n" +
	"$ApplicationServiceCreateTaskResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x04data\x18\x03 \x01(\v2\x1c.aquarium.v2.ApplicationTaskR\x04data\"T\n" +
	" ApplicationServiceGetTaskRequest\x120\n" +
	"\x14application_task_uid\x18\x01 \x01(\tR\x12applicationTaskUid\"\x87\x01\n" +
	"!ApplicationServiceGetTaskResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x04data\x18\x03 \x01(\v2\x1c.aquarium.v2.ApplicationTaskR\x04data\"N\n" +
	"#ApplicationServiceDeallocateRequest\x12'\n" +
	"\x0fapplication_uid\x18\x01 \x01(\tR\x0eapplicationUid\"X\n" +
	"$ApplicationServiceDeallocateResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xd6\v\n" +
	"\x12ApplicationService\x12t\n" +
	"\x04List\x12*.aquarium.v2.ApplicationServiceListRequest\x1a+.aquarium.v2.ApplicationServiceListResponse\"\x13\x82\xb5\x18\x0f\x1a\x04User\"\aListAll\x12p\n" +
	"\x03Get\x12).aquarium.v2.ApplicationServiceGetRequest\x1a*.aquarium.v2.ApplicationServiceGetResponse\"\x12\x82\xb5\x18\x0e\x1a\x04User\"\x06GetAll\x12q\n" +
	"\x06Create\x12,.aquarium.v2.ApplicationServiceCreateRequest\x1a-.aquarium.v2.ApplicationServiceCreateResponse\"\n" +
	"\x82\xb5\x18\x06\x1a\x04User\x12\x88\x01\n" +
	"\tListState\x12/.aquarium.v2.ApplicationServiceListStateRequest\x1a0.aquarium.v2.ApplicationServiceListStateResponse\"\x18\x82\xb5\x18\x14\x1a\x04User\"\fListStateAll\x12\x84\x01\n" +
	"\bGetState\x12..aquarium.v2.ApplicationServiceGetStateRequest\x1a/.aquarium.v2.ApplicationServiceGetStateResponse\"\x17\x82\xb5\x18\x13\x1a\x04User\"\vGetStateAll\x12\x94\x01\n" +
	"\fListResource\x122.aquarium.v2.ApplicationServiceListResourceRequest\x1a3.aquarium.v2.ApplicationServiceListResourceResponse\"\x1b\x82\xb5\x18\x17\x1a\x04User\"\x0fListResourceAll\x12\x90\x01\n" +
	"\vGetResource\x121.aquarium.v2.ApplicationServiceGetResourceRequest\x1a2.aquarium.v2.ApplicationServiceGetResourceResponse\"\x1a\x82\xb5\x18\x16\x1a\x04User\"\x0eGetResourceAll\x12\x85\x01\n" +
	"\bListTask\x12..aquarium.v2.ApplicationServiceListTaskRequest\x1a/.aquarium.v2.ApplicationServiceListTaskResponse\"\x18\x82\xb5\x18\x14\x1a\x05Power\"\vListTaskAll\x12\x8d\x01\n" +
	"\n" +
	"CreateTask\x120.aquarium.v2.ApplicationServiceCreateTaskRequest\x1a1.aquarium.v2.ApplicationServiceCreateTaskResponse\"\x1a\x82\xb5\x18\x16\x1a\x05Power\"\rCreateTaskAll\x12\x81\x01\n" +
	"\aGetTask\x12-.aquarium.v2.ApplicationServiceGetTaskRequest\x1a..aquarium.v2.ApplicationServiceGetTaskResponse\"\x17\x82\xb5\x18\x13\x1a\x05Power\"\n" +
	"GetTaskAll\x12\x8c\x01\n" +
	"\n" +
	"Deallocate\x120.aquarium.v2.ApplicationServiceDeallocateRequest\x1a1.aquarium.v2.ApplicationServiceDeallocateResponse\"\x19\x82\xb5\x18\x15\x1a\x04User\"\rDeallocateAllBEZCgithub.com/adobe/aquarium-fish/lib/rpc/proto/aquarium/v2;aquariumv2b\x06proto3"

var (
	file_aquarium_v2_application_proto_rawDescOnce sync.Once
	file_aquarium_v2_application_proto_rawDescData []byte
)

func file_aquarium_v2_application_proto_rawDescGZIP() []byte {
	file_aquarium_v2_application_proto_rawDescOnce.Do(func() {
		file_aquarium_v2_application_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aquarium_v2_application_proto_rawDesc), len(file_aquarium_v2_application_proto_rawDesc)))
	})
	return file_aquarium_v2_application_proto_rawDescData
}

var file_aquarium_v2_application_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aquarium_v2_application_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_aquarium_v2_application_proto_goTypes = []any{
	(ApplicationState_Status)(0),                   // 0: aquarium.v2.ApplicationState.Status
	(*Application)(nil),                            // 1: aquarium.v2.Application
	(*ApplicationState)(nil),                       // 2: aquarium.v2.ApplicationState
	(*ApplicationResource)(nil),                    // 3: aquarium.v2.ApplicationResource
	(*ApplicationTask)(nil),                        // 4: aquarium.v2.ApplicationTask
	(*ApplicationServiceListRequest)(nil),          // 5: aquarium.v2.ApplicationServiceListRequest
	(*ApplicationServiceListResponse)(nil),         // 6: aquarium.v2.ApplicationServiceListResponse
	(*ApplicationServiceGetRequest)(nil),           // 7: aquarium.v2.ApplicationServiceGetRequest
	(*ApplicationServiceGetResponse)(nil),          // 8: aquarium.v2.ApplicationServiceGetResponse
	(*ApplicationServiceCreateRequest)(nil),        // 9: aquarium.v2.ApplicationServiceCreateRequest
	(*ApplicationServiceCreateResponse)(nil),       // 10: aquarium.v2.ApplicationServiceCreateResponse
	(*ApplicationServiceListStateRequest)(nil),     // 11: aquarium.v2.ApplicationServiceListStateRequest
	(*ApplicationServiceListStateResponse)(nil),    // 12: aquarium.v2.ApplicationServiceListStateResponse
	(*ApplicationServiceGetStateRequest)(nil),      // 13: aquarium.v2.ApplicationServiceGetStateRequest
	(*ApplicationServiceGetStateResponse)(nil),     // 14: aquarium.v2.ApplicationServiceGetStateResponse
	(*ApplicationServiceListResourceRequest)(nil),  // 15: aquarium.v2.ApplicationServiceListResourceRequest
	(*ApplicationServiceListResourceResponse)(nil), // 16: aquarium.v2.ApplicationServiceListResourceResponse
	(*ApplicationServiceGetResourceRequest)(nil),   // 17: aquarium.v2.ApplicationServiceGetResourceRequest
	(*ApplicationServiceGetResourceResponse)(nil),  // 18: aquarium.v2.ApplicationServiceGetResourceResponse
	(*ApplicationServiceListTaskRequest)(nil),      // 19: aquarium.v2.ApplicationServiceListTaskRequest
	(*ApplicationServiceListTaskResponse)(nil),     // 20: aquarium.v2.ApplicationServiceListTaskResponse
	(*ApplicationServiceCreateTaskRequest)(nil),    // 21: aquarium.v2.ApplicationServiceCreateTaskRequest
	(*ApplicationServiceCreateTaskResponse)(nil),   // 22: aquarium.v2.ApplicationServiceCreateTaskResponse
	(*ApplicationServiceGetTaskRequest)(nil),       // 23: aquarium.v2.ApplicationServiceGetTaskRequest
	(*ApplicationServiceGetTaskResponse)(nil),      // 24: aquarium.v2.ApplicationServiceGetTaskResponse
	(*ApplicationServiceDeallocateRequest)(nil),    // 25: aquarium.v2.ApplicationServiceDeallocateRequest
	(*ApplicationServiceDeallocateResponse)(nil),   // 26: aquarium.v2.ApplicationServiceDeallocateResponse
	(*timestamppb.Timestamp)(nil),                  // 27: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                        // 28: google.protobuf.Struct
	(*Authentication)(nil),                         // 29: aquarium.v2.Authentication
}
var file_aquarium_v2_application_proto_depIdxs = []int32{
	27, // 0: aquarium.v2.Application.created_at:type_name -> google.protobuf.Timestamp
	28, // 1: aquarium.v2.Application.metadata:type_name -> google.protobuf.Struct
	27, // 2: aquarium.v2.ApplicationState.created_at:type_name -> google.protobuf.Timestamp
	0,  // 3: aquarium.v2.ApplicationState.status:type_name -> aquarium.v2.ApplicationState.Status
	27, // 4: aquarium.v2.ApplicationResource.created_at:type_name -> google.protobuf.Timestamp
	27, // 5: aquarium.v2.ApplicationResource.updated_at:type_name -> google.protobuf.Timestamp
	28, // 6: aquarium.v2.ApplicationResource.metadata:type_name -> google.protobuf.Struct
	27, // 7: aquarium.v2.ApplicationResource.timeout:type_name -> google.protobuf.Timestamp
	29, // 8: aquarium.v2.ApplicationResource.authentication:type_name -> aquarium.v2.Authentication
	27, // 9: aquarium.v2.ApplicationTask.created_at:type_name -> google.protobuf.Timestamp
	27, // 10: aquarium.v2.ApplicationTask.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 11: aquarium.v2.ApplicationTask.when:type_name -> aquarium.v2.ApplicationState.Status
	28, // 12: aquarium.v2.ApplicationTask.options:type_name -> google.protobuf.Struct
	28, // 13: aquarium.v2.ApplicationTask.result:type_name -> google.protobuf.Struct
	1,  // 14: aquarium.v2.ApplicationServiceListResponse.data:type_name -> aquarium.v2.Application
	1,  // 15: aquarium.v2.ApplicationServiceGetResponse.data:type_name -> aquarium.v2.Application
	1,  // 16: aquarium.v2.ApplicationServiceCreateRequest.application:type_name -> aquarium.v2.Application
	1,  // 17: aquarium.v2.ApplicationServiceCreateResponse.data:type_name -> aquarium.v2.Application
	2,  // 18: aquarium.v2.ApplicationServiceListStateResponse.data:type_name -> aquarium.v2.ApplicationState
	2,  // 19: aquarium.v2.ApplicationServiceGetStateResponse.data:type_name -> aquarium.v2.ApplicationState
	3,  // 20: aquarium.v2.ApplicationServiceListResourceResponse.data:type_name -> aquarium.v2.ApplicationResource
	3,  // 21: aquarium.v2.ApplicationServiceGetResourceResponse.data:type_name -> aquarium.v2.ApplicationResource
	4,  // 22: aquarium.v2.ApplicationServiceListTaskResponse.data:type_name -> aquarium.v2.ApplicationTask
	4,  // 23: aquarium.v2.ApplicationServiceCreateTaskRequest.task:type_name -> aquarium.v2.ApplicationTask
	4,  // 24: aquarium.v2.ApplicationServiceCreateTaskResponse.data:type_name -> aquarium.v2.ApplicationTask
	4,  // 25: aquarium.v2.ApplicationServiceGetTaskResponse.data:type_name -> aquarium.v2.ApplicationTask
	5,  // 26: aquarium.v2.ApplicationService.List:input_type -> aquarium.v2.ApplicationServiceListRequest
	7,  // 27: aquarium.v2.ApplicationService.Get:input_type -> aquarium.v2.ApplicationServiceGetRequest
	9,  // 28: aquarium.v2.ApplicationService.Create:input_type -> aquarium.v2.ApplicationServiceCreateRequest
	11, // 29: aquarium.v2.ApplicationService.ListState:input_type -> aquarium.v2.ApplicationServiceListStateRequest
	13, // 30: aquarium.v2.ApplicationService.GetState:input_type -> aquarium.v2.ApplicationServiceGetStateRequest
	15, // 31: aquarium.v2.ApplicationService.ListResource:input_type -> aquarium.v2.ApplicationServiceListResourceRequest
	17, // 32: aquarium.v2.ApplicationService.GetResource:input_type -> aquarium.v2.ApplicationServiceGetResourceRequest
	19, // 33: aquarium.v2.ApplicationService.ListTask:input_type -> aquarium.v2.ApplicationServiceListTaskRequest
	21, // 34: aquarium.v2.ApplicationService.CreateTask:input_type -> aquarium.v2.ApplicationServiceCreateTaskRequest
	23, // 35: aquarium.v2.ApplicationService.GetTask:input_type -> aquarium.v2.ApplicationServiceGetTaskRequest
	25, // 36: aquarium.v2.ApplicationService.Deallocate:input_type -> aquarium.v2.ApplicationServiceDeallocateRequest
	6,  // 37: aquarium.v2.ApplicationService.List:output_type -> aquarium.v2.ApplicationServiceListResponse
	8,  // 38: aquarium.v2.ApplicationService.Get:output_type -> aquarium.v2.ApplicationServiceGetResponse
	10, // 39: aquarium.v2.ApplicationService.Create:output_type -> aquarium.v2.ApplicationServiceCreateResponse
	12, // 40: aquarium.v2.ApplicationService.ListState:output_type -> aquarium.v2.ApplicationServiceListStateResponse
	14, // 41: aquarium.v2.ApplicationService.GetState:output_type -> aquarium.v2.ApplicationServiceGetStateResponse
	16, // 42: aquarium.v2.ApplicationService.ListResource:output_type -> aquarium.v2.ApplicationServiceListResourceResponse
	18, // 43: aquarium.v2.ApplicationService.GetResource:output_type -> aquarium.v2.ApplicationServiceGetResourceResponse
	20, // 44: aquarium.v2.ApplicationService.ListTask:output_type -> aquarium.v2.ApplicationServiceListTaskResponse
	22, // 45: aquarium.v2.ApplicationService.CreateTask:output_type -> aquarium.v2.ApplicationServiceCreateTaskResponse
	24, // 46: aquarium.v2.ApplicationService.GetTask:output_type -> aquarium.v2.ApplicationServiceGetTaskResponse
	26, // 47: aquarium.v2.ApplicationService.Deallocate:output_type -> aquarium.v2.ApplicationServiceDeallocateResponse
	37, // [37:48] is the sub-list for method output_type
	26, // [26:37] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_aquarium_v2_application_proto_init() }
func file_aquarium_v2_application_proto_init() {
	if File_aquarium_v2_application_proto != nil {
		return
	}
	file_aquarium_v2_common_proto_init()
	file_aquarium_v2_options_rbac_proto_init()
	file_aquarium_v2_options_streaming_proto_init()
	file_aquarium_v2_options_ui_proto_init()
	file_aquarium_v2_application_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aquarium_v2_application_proto_rawDesc), len(file_aquarium_v2_application_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aquarium_v2_application_proto_goTypes,
		DependencyIndexes: file_aquarium_v2_application_proto_depIdxs,
		EnumInfos:         file_aquarium_v2_application_proto_enumTypes,
		MessageInfos:      file_aquarium_v2_application_proto_msgTypes,
	}.Build()
	File_aquarium_v2_application_proto = out.File
	file_aquarium_v2_application_proto_goTypes = nil
	file_aquarium_v2_application_proto_depIdxs = nil
}
