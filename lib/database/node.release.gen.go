//go:build !debug

/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

// Code generated by trace-gen-functions tool. DO NOT EDIT.

package database

import (
	"context"

	typesv2 "github.com/adobe/aquarium-fish/lib/types/aquarium/v2"
)

func (d *Database) SubscribeNode(ctx context.Context, ch chan NodeSubscriptionEvent) {
	d.subscribeNodeImpl(ctx, ch)
}

func (d *Database) UnsubscribeNode(ctx context.Context, ch chan NodeSubscriptionEvent) {
	d.unsubscribeNodeImpl(ctx, ch)
}

func (d *Database) NodeList(ctx context.Context) ([]typesv2.Node, error) {
	return d.nodeListImpl(ctx)
}

func (d *Database) NodeGet(ctx context.Context, name string) (*typesv2.Node, error) {
	return d.nodeGetImpl(ctx, name)
}

func (d *Database) NodeActiveList(ctx context.Context) ([]typesv2.Node, error) {
	return d.nodeActiveListImpl(ctx)
}

func (d *Database) NodeCreate(ctx context.Context, n *typesv2.Node) error {
	return d.nodeCreateImpl(ctx, n)
}

func (d *Database) NodeSave(ctx context.Context, node *typesv2.Node) error {
	return d.nodeSaveImpl(ctx, node)
}

func (d *Database) NodePing(ctx context.Context) error {
	return d.nodePingImpl(ctx)
}
