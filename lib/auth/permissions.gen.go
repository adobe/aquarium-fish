/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

// Code generated by Aquarium buf-gen-permissions. DO NOT EDIT.

package auth

import (
	typesv2 "github.com/adobe/aquarium-fish/lib/types/aquarium/v2"
)

// All available permissions per role
var rolePermissions = map[string][]typesv2.Permission{
	"Administrator": {
		// ApplicationService
		{Resource: ApplicationService, Action: ApplicationServiceCreate},         // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceCreateTask},     // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceCreateTaskAll},  // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceDeallocate},     // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceDeallocateAll},  // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceGet},            // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetAll},         // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceGetResource},    // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetResourceAll}, // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceGetState},       // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetStateAll},    // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceGetTask},        // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetTaskAll},     // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceList},           // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceListAll},        // gRPC additional
		{Resource: ApplicationService, Action: ApplicationServiceListTask},       // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceListTaskAll},    // gRPC additional

		// GateProxySSHService
		{Resource: GateProxySSHService, Action: GateProxySSHServiceGetResourceAccess},    // gRPC
		{Resource: GateProxySSHService, Action: GateProxySSHServiceGetResourceAccessAll}, // gRPC additional

		// LabelService
		{Resource: LabelService, Action: LabelServiceCreate}, // gRPC
		{Resource: LabelService, Action: LabelServiceGet},    // gRPC
		{Resource: LabelService, Action: LabelServiceList},   // gRPC
		{Resource: LabelService, Action: LabelServiceRemove}, // gRPC

		// NodeService
		{Resource: NodeService, Action: NodeServiceGet},            // gRPC
		{Resource: NodeService, Action: NodeServiceGetThis},        // gRPC
		{Resource: NodeService, Action: NodeServiceList},           // gRPC
		{Resource: NodeService, Action: NodeServiceSetMaintenance}, // gRPC

		// RoleService
		{Resource: RoleService, Action: RoleServiceCreate}, // gRPC
		{Resource: RoleService, Action: RoleServiceGet},    // gRPC
		{Resource: RoleService, Action: RoleServiceList},   // gRPC
		{Resource: RoleService, Action: RoleServiceRemove}, // gRPC
		{Resource: RoleService, Action: RoleServiceUpdate}, // gRPC

		// StreamingService
		{Resource: StreamingService, Action: StreamingServiceConnect},   // gRPC
		{Resource: StreamingService, Action: StreamingServiceSubscribe}, // gRPC

		// UserService
		{Resource: UserService, Action: UserServiceCreate},         // gRPC
		{Resource: UserService, Action: UserServiceGet},            // gRPC
		{Resource: UserService, Action: UserServiceList},           // gRPC
		{Resource: UserService, Action: UserServiceRemove},         // gRPC
		{Resource: UserService, Action: UserServiceUpdate},         // gRPC
		{Resource: UserService, Action: UserServiceUpdateAll},      // gRPC additional
		{Resource: UserService, Action: UserServiceUpdatePassword}, // gRPC additional
		{Resource: UserService, Action: UserServiceUpdateRoles},    // gRPC additional
	},
	"Power": {
		// ApplicationService
		{Resource: ApplicationService, Action: ApplicationServiceCreateTask}, // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetTask},    // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceListTask},   // gRPC

		// GateProxySSHService
		{Resource: GateProxySSHService, Action: GateProxySSHServiceGetResourceAccess}, // gRPC
	},
	"User": {
		// ApplicationService
		{Resource: ApplicationService, Action: ApplicationServiceCreate},      // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceDeallocate},  // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGet},         // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetResource}, // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceGetState},    // gRPC
		{Resource: ApplicationService, Action: ApplicationServiceList},        // gRPC

		// LabelService
		{Resource: LabelService, Action: LabelServiceList}, // gRPC

		// StreamingService
		{Resource: StreamingService, Action: StreamingServiceConnect},   // gRPC
		{Resource: StreamingService, Action: StreamingServiceSubscribe}, // gRPC
	},
}

// GetRolePermissions returns a map of all possible permissions for all known roles
func GetRolePermissions() map[string][]typesv2.Permission {
	return rolePermissions
}
