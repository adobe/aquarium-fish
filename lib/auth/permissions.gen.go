// Code generated by Aquarium buf-gen-permissions. DO NOT EDIT.

package auth

import (
	"github.com/adobe/aquarium-fish/lib/openapi/types"
)

// Service and Method constants
const (
	// ApplicationService service constants
	ApplicationService            = "ApplicationService"
	ApplicationServiceList        = "List"
	ApplicationServiceGet         = "Get"
	ApplicationServiceCreate      = "Create"
	ApplicationServiceGetState    = "GetState"
	ApplicationServiceGetResource = "GetResource"
	ApplicationServiceListTask    = "ListTask"
	ApplicationServiceCreateTask  = "CreateTask"
	ApplicationServiceGetTask     = "GetTask"
	ApplicationServiceDeallocate  = "Deallocate"

	// LabelService service constants
	LabelService       = "LabelService"
	LabelServiceList   = "List"
	LabelServiceGet    = "Get"
	LabelServiceCreate = "Create"
	LabelServiceDelete = "Delete"

	// NodeService service constants
	NodeService               = "NodeService"
	NodeServiceList           = "List"
	NodeServiceGetThis        = "GetThis"
	NodeServiceSetMaintenance = "SetMaintenance"
	NodeServiceGetProfiling   = "GetProfiling"

	// RoleService service constants
	RoleService       = "RoleService"
	RoleServiceList   = "List"
	RoleServiceGet    = "Get"
	RoleServiceCreate = "Create"
	RoleServiceUpdate = "Update"
	RoleServiceDelete = "Delete"

	// UserService service constants
	UserService            = "UserService"
	UserServiceGetMe       = "GetMe"
	UserServiceList        = "List"
	UserServiceGet         = "Get"
	UserServiceCreate      = "Create"
	UserServiceUpdate      = "Update"
	UserServiceDelete      = "Delete"
	UserServiceAssignRoles = "AssignRoles"
)

// All available permissions per role
var permissions = map[string][]types.Permission{
	"Administrator": {
		{Resource: ApplicationService, Action: ApplicationServiceList},
		{Resource: ApplicationService, Action: ApplicationServiceGet},
		{Resource: ApplicationService, Action: ApplicationServiceCreate},
		{Resource: ApplicationService, Action: ApplicationServiceGetState},
		{Resource: ApplicationService, Action: ApplicationServiceGetResource},
		{Resource: ApplicationService, Action: ApplicationServiceListTask},
		{Resource: ApplicationService, Action: ApplicationServiceCreateTask},
		{Resource: ApplicationService, Action: ApplicationServiceGetTask},
		{Resource: ApplicationService, Action: ApplicationServiceDeallocate},

		{Resource: LabelService, Action: LabelServiceList},
		{Resource: LabelService, Action: LabelServiceGet},
		{Resource: LabelService, Action: LabelServiceCreate},
		{Resource: LabelService, Action: LabelServiceDelete},

		{Resource: NodeService, Action: NodeServiceList},
		{Resource: NodeService, Action: NodeServiceGetThis},
		{Resource: NodeService, Action: NodeServiceSetMaintenance},
		{Resource: NodeService, Action: NodeServiceGetProfiling},

		{Resource: RoleService, Action: RoleServiceList},
		{Resource: RoleService, Action: RoleServiceGet},
		{Resource: RoleService, Action: RoleServiceCreate},
		{Resource: RoleService, Action: RoleServiceUpdate},
		{Resource: RoleService, Action: RoleServiceDelete},

		{Resource: UserService, Action: UserServiceGetMe},
		{Resource: UserService, Action: UserServiceList},
		{Resource: UserService, Action: UserServiceGet},
		{Resource: UserService, Action: UserServiceCreate},
		{Resource: UserService, Action: UserServiceUpdate},
		{Resource: UserService, Action: UserServiceDelete},
		{Resource: UserService, Action: UserServiceAssignRoles},
	},
	"User": {

		{Resource: UserService, Action: UserServiceList},
	},
}

// GetRolePermissions returns a map of all possible permissions for all known roles
func GetRolePermissions() map[string][]types.Permission {
	return permissions
}
