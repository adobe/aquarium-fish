/**
 * Copyright 2025 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

// Code generated by Aquarium buf-gen-permissions. DO NOT EDIT.

// Services
export enum PermService {
  Application = "ApplicationService",
  Auth = "AuthService",
  GateProxySSH = "GateProxySSHService",
  Label = "LabelService",
  Node = "NodeService",
  Role = "RoleService",
  Streaming = "StreamingService",
  User = "UserService",
}

// Services Methods
// ApplicationService service constants
export enum PermApplication {
  Create = "Create",
  CreateTask = "CreateTask",
  CreateTaskAll = "CreateTaskAll",
  Deallocate = "Deallocate",
  DeallocateAll = "DeallocateAll",
  Get = "Get",
  GetAll = "GetAll",
  GetResource = "GetResource",
  GetResourceAll = "GetResourceAll",
  GetState = "GetState",
  GetStateAll = "GetStateAll",
  GetTask = "GetTask",
  GetTaskAll = "GetTaskAll",
  List = "List",
  ListAll = "ListAll",
  ListTask = "ListTask",
  ListTaskAll = "ListTaskAll",
}
// AuthService service constants
export enum PermAuth {
  Login = "Login",
  ValidateToken = "ValidateToken",
  GetPermissions = "GetPermissions",
  RefreshToken = "RefreshToken",
}
// GateProxySSHService service constants
export enum PermGateProxySSH {
  GetResourceAccess = "GetResourceAccess",
  GetResourceAccessAll = "GetResourceAccessAll",
}
// LabelService service constants
export enum PermLabel {
  Create = "Create",
  Get = "Get",
  List = "List",
  Remove = "Remove",
}
// NodeService service constants
export enum PermNode {
  Get = "Get",
  GetThis = "GetThis",
  List = "List",
  SetMaintenance = "SetMaintenance",
}
// RoleService service constants
export enum PermRole {
  Create = "Create",
  Get = "Get",
  List = "List",
  Remove = "Remove",
  Update = "Update",
}
// StreamingService service constants
export enum PermStreaming {
  Connect = "Connect",
  Subscribe = "Subscribe",
}
// UserService service constants
export enum PermUser {
  GetMe = "GetMe",
  Create = "Create",
  Get = "Get",
  List = "List",
  Remove = "Remove",
  Update = "Update",
  UpdateAll = "UpdateAll",
  UpdatePassword = "UpdatePassword",
  UpdateRoles = "UpdateRoles",
}
// Auth-excluded service-methods
export const authExcluded: Record<string, string[]> = {
  "AuthService": [
    "Login",
    "ValidateToken",
  ],
};

// isExcludedFromAuth helps connectrpc to exclude methods from Auth validation
export function isExcludedFromAuth(service: string, method: string): boolean {
  const methods = authExcluded[service];
  return methods ? methods.includes(method) : false;
}
// RBAC-excluded service-methods
export const rbacExcluded: Record<string, string[]> = {
  "AuthService": [
    "Login",
    "ValidateToken",
    "GetPermissions",
    "RefreshToken",
  ],
  "UserService": [
    "GetMe",
  ],
};

// isExcludedFromRBAC helps connectrpc to exclude methods from RBAC validation
export function isExcludedFromRBAC(service: string, method: string): boolean {
  const methods = rbacExcluded[service];
  return methods ? methods.includes(method) : false;
}
