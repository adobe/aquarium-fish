// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file aquarium/v2/user.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { UserServiceCreateRequest, UserServiceCreateResponse, UserServiceDeleteRequest, UserServiceDeleteResponse, UserServiceGetMeRequest, UserServiceGetMeResponse, UserServiceGetRequest, UserServiceGetResponse, UserServiceListRequest, UserServiceListResponse, UserServiceUpdateRequest, UserServiceUpdateResponse } from "./user_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * User service handles user management operations
 *
 * @generated from service aquarium.v2.UserService
 */
export const UserService = {
  typeName: "aquarium.v2.UserService",
  methods: {
    /**
     * Get current user information
     *
     * @generated from rpc aquarium.v2.UserService.GetMe
     */
    getMe: {
      name: "GetMe",
      I: UserServiceGetMeRequest,
      O: UserServiceGetMeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get list of users
     *
     * @generated from rpc aquarium.v2.UserService.List
     */
    list: {
      name: "List",
      I: UserServiceListRequest,
      O: UserServiceListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get user by name
     *
     * @generated from rpc aquarium.v2.UserService.Get
     */
    get: {
      name: "Get",
      I: UserServiceGetRequest,
      O: UserServiceGetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create new user
     *
     * @generated from rpc aquarium.v2.UserService.Create
     */
    create: {
      name: "Create",
      I: UserServiceCreateRequest,
      O: UserServiceCreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update existing user
     *
     * @generated from rpc aquarium.v2.UserService.Update
     */
    update: {
      name: "Update",
      I: UserServiceUpdateRequest,
      O: UserServiceUpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete user
     *
     * @generated from rpc aquarium.v2.UserService.Delete
     */
    delete: {
      name: "Delete",
      I: UserServiceDeleteRequest,
      O: UserServiceDeleteResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

