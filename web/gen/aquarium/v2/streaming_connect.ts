// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file aquarium/v2/streaming.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { StreamingServiceConnectRequest, StreamingServiceConnectResponse, StreamingServiceSubscribeRequest, StreamingServiceSubscribeResponse } from "./streaming_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * StreamingService handles bidirectional streaming and subscriptions
 *
 * @generated from service aquarium.v2.StreamingService
 */
export const StreamingService = {
  typeName: "aquarium.v2.StreamingService",
  methods: {
    /**
     * Connect establishes a bidirectional stream for RPC requests/responses
     *
     * @generated from rpc aquarium.v2.StreamingService.Connect
     */
    connect: {
      name: "Connect",
      I: StreamingServiceConnectRequest,
      O: StreamingServiceConnectResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * Subscribe establishes a server stream for database change notifications
     *
     * @generated from rpc aquarium.v2.StreamingService.Subscribe
     */
    subscribe: {
      name: "Subscribe",
      I: StreamingServiceSubscribeRequest,
      O: StreamingServiceSubscribeResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

