// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file aquarium/v2/auth.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AuthServiceGetPermissionsRequest, AuthServiceGetPermissionsResponse, AuthServiceLoginRequest, AuthServiceLoginResponse, AuthServiceRefreshTokenRequest, AuthServiceRefreshTokenResponse, AuthServiceValidateTokenRequest, AuthServiceValidateTokenResponse } from "./auth_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * AuthService handles authentication and authorization operations
 *
 * @generated from service aquarium.v2.AuthService
 */
export const AuthService = {
  typeName: "aquarium.v2.AuthService",
  methods: {
    /**
     * Login authenticates a user and returns a JWT token
     *
     * @generated from rpc aquarium.v2.AuthService.Login
     */
    login: {
      name: "Login",
      I: AuthServiceLoginRequest,
      O: AuthServiceLoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RefreshToken refreshes an existing JWT token
     *
     * @generated from rpc aquarium.v2.AuthService.RefreshToken
     */
    refreshToken: {
      name: "RefreshToken",
      I: AuthServiceRefreshTokenRequest,
      O: AuthServiceRefreshTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetPermissions returns the current user's permissions
     *
     * @generated from rpc aquarium.v2.AuthService.GetPermissions
     */
    getPermissions: {
      name: "GetPermissions",
      I: AuthServiceGetPermissionsRequest,
      O: AuthServiceGetPermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ValidateToken validates a JWT token
     *
     * @generated from rpc aquarium.v2.AuthService.ValidateToken
     */
    validateToken: {
      name: "ValidateToken",
      I: AuthServiceValidateTokenRequest,
      O: AuthServiceValidateTokenResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

