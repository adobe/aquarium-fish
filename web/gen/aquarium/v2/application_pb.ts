// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// @generated by protoc-gen-es v2.6.2 with parameter "target=ts"
// @generated from file aquarium/v2/application.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Authentication } from "./common_pb";
import { file_aquarium_v2_common } from "./common_pb";
import { file_aquarium_v2_options_rbac } from "./options_rbac_pb";
import { file_aquarium_v2_options_streaming } from "./options_streaming_pb";
import { file_aquarium_v2_options_ui } from "./options_ui_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file aquarium/v2/application.proto.
 */
export const file_aquarium_v2_application: GenFile = /*@__PURE__*/
  fileDesc("Ch1hcXVhcml1bS92Mi9hcHBsaWNhdGlvbi5wcm90bxILYXF1YXJpdW0udjIi8QEKC0FwcGxpY2F0aW9uEhUKA3VpZBgBIAEoCUIImrUYBAgBEAESOAoKY3JlYXRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCCJq1GAQIARABEhwKCm93bmVyX25hbWUYAyABKAlCCJq1GAQIARABEiUKCWxhYmVsX3VpZBgEIAEoCUISmrUYDhoFTGFiZWwiBUxhYmVsEikKCG1ldGFkYXRhGAUgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdDohirUYFwoVQXBwbGljYXRpb25TZXJ2aWNlR2V0krUYAggBIsECChBBcHBsaWNhdGlvblN0YXRlEgsKA3VpZBgBIAEoCRIuCgpjcmVhdGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIXCg9hcHBsaWNhdGlvbl91aWQYAyABKAkSNAoGc3RhdHVzGAQgASgOMiQuYXF1YXJpdW0udjIuQXBwbGljYXRpb25TdGF0ZS5TdGF0dXMSEwoLZGVzY3JpcHRpb24YBSABKAkiagoGU3RhdHVzEg8KC1VOU1BFQ0lGSUVEEAASBwoDTkVXEAESCwoHRUxFQ1RFRBACEg0KCUFMTE9DQVRFRBADEg4KCkRFQUxMT0NBVEUQBBIPCgtERUFMTE9DQVRFRBAFEgkKBUVSUk9SEAY6IIq1GBwKGkFwcGxpY2F0aW9uU2VydmljZUdldFN0YXRlIo8EChNBcHBsaWNhdGlvblJlc291cmNlEhUKA3VpZBgBIAEoCUIImrUYBAgBEAESOAoKY3JlYXRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCCJq1GAQIARABEjgKCnVwZGF0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgiatRgECAEQARIXCg9hcHBsaWNhdGlvbl91aWQYBCABKAkSEAoIbm9kZV91aWQYBSABKAkSEQoJbGFiZWxfdWlkGAYgASgJEhgKEGRlZmluaXRpb25faW5kZXgYByABKAUSEgoKaWRlbnRpZmllchgIIAEoCRIPCgdpcF9hZGRyGAkgASgJEg8KB2h3X2FkZHIYCiABKAkSKQoIbWV0YWRhdGEYCyABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EjAKB3RpbWVvdXQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQESOAoOYXV0aGVudGljYXRpb24YDSABKAsyGy5hcXVhcml1bS52Mi5BdXRoZW50aWNhdGlvbkgBiAEBOimKtRgfCh1BcHBsaWNhdGlvblNlcnZpY2VHZXRSZXNvdXJjZZK1GAIIAUIKCghfdGltZW91dEIRCg9fYXV0aGVudGljYXRpb24izQIKD0FwcGxpY2F0aW9uVGFzaxILCgN1aWQYASABKAkSLgoKY3JlYXRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFwoPYXBwbGljYXRpb25fdWlkGAQgASgJEgwKBHRhc2sYBSABKAkSMgoEd2hlbhgGIAEoDjIkLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU3RhdGUuU3RhdHVzEigKB29wdGlvbnMYByABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EicKBnJlc3VsdBgIIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3Q6H4q1GBsKGUFwcGxpY2F0aW9uU2VydmljZUdldFRhc2siHwodQXBwbGljYXRpb25TZXJ2aWNlTGlzdFJlcXVlc3QiaQoeQXBwbGljYXRpb25TZXJ2aWNlTGlzdFJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEiYKBGRhdGEYAyADKAsyGC5hcXVhcml1bS52Mi5BcHBsaWNhdGlvbiI3ChxBcHBsaWNhdGlvblNlcnZpY2VHZXRSZXF1ZXN0EhcKD2FwcGxpY2F0aW9uX3VpZBgBIAEoCSJoCh1BcHBsaWNhdGlvblNlcnZpY2VHZXRSZXNwb25zZRIOCgZzdGF0dXMYASABKAgSDwoHbWVzc2FnZRgCIAEoCRImCgRkYXRhGAMgASgLMhguYXF1YXJpdW0udjIuQXBwbGljYXRpb24iUAofQXBwbGljYXRpb25TZXJ2aWNlQ3JlYXRlUmVxdWVzdBItCgthcHBsaWNhdGlvbhgBIAEoCzIYLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uImsKIEFwcGxpY2F0aW9uU2VydmljZUNyZWF0ZVJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEiYKBGRhdGEYAyABKAsyGC5hcXVhcml1bS52Mi5BcHBsaWNhdGlvbiI8CiFBcHBsaWNhdGlvblNlcnZpY2VHZXRTdGF0ZVJlcXVlc3QSFwoPYXBwbGljYXRpb25fdWlkGAEgASgJInIKIkFwcGxpY2F0aW9uU2VydmljZUdldFN0YXRlUmVzcG9uc2USDgoGc3RhdHVzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkSKwoEZGF0YRgDIAEoCzIdLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU3RhdGUiPwokQXBwbGljYXRpb25TZXJ2aWNlR2V0UmVzb3VyY2VSZXF1ZXN0EhcKD2FwcGxpY2F0aW9uX3VpZBgBIAEoCSJ4CiVBcHBsaWNhdGlvblNlcnZpY2VHZXRSZXNvdXJjZVJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEi4KBGRhdGEYAyABKAsyIC5hcXVhcml1bS52Mi5BcHBsaWNhdGlvblJlc291cmNlIjwKIUFwcGxpY2F0aW9uU2VydmljZUxpc3RUYXNrUmVxdWVzdBIXCg9hcHBsaWNhdGlvbl91aWQYASABKAkicQoiQXBwbGljYXRpb25TZXJ2aWNlTGlzdFRhc2tSZXNwb25zZRIOCgZzdGF0dXMYASABKAgSDwoHbWVzc2FnZRgCIAEoCRIqCgRkYXRhGAMgAygLMhwuYXF1YXJpdW0udjIuQXBwbGljYXRpb25UYXNrImoKI0FwcGxpY2F0aW9uU2VydmljZUNyZWF0ZVRhc2tSZXF1ZXN0EhcKD2FwcGxpY2F0aW9uX3VpZBgBIAEoCRIqCgR0YXNrGAIgASgLMhwuYXF1YXJpdW0udjIuQXBwbGljYXRpb25UYXNrInMKJEFwcGxpY2F0aW9uU2VydmljZUNyZWF0ZVRhc2tSZXNwb25zZRIOCgZzdGF0dXMYASABKAgSDwoHbWVzc2FnZRgCIAEoCRIqCgRkYXRhGAMgASgLMhwuYXF1YXJpdW0udjIuQXBwbGljYXRpb25UYXNrIkAKIEFwcGxpY2F0aW9uU2VydmljZUdldFRhc2tSZXF1ZXN0EhwKFGFwcGxpY2F0aW9uX3Rhc2tfdWlkGAEgASgJInAKIUFwcGxpY2F0aW9uU2VydmljZUdldFRhc2tSZXNwb25zZRIOCgZzdGF0dXMYASABKAgSDwoHbWVzc2FnZRgCIAEoCRIqCgRkYXRhGAMgASgLMhwuYXF1YXJpdW0udjIuQXBwbGljYXRpb25UYXNrIj4KI0FwcGxpY2F0aW9uU2VydmljZURlYWxsb2NhdGVSZXF1ZXN0EhcKD2FwcGxpY2F0aW9uX3VpZBgBIAEoCSJHCiRBcHBsaWNhdGlvblNlcnZpY2VEZWFsbG9jYXRlUmVzcG9uc2USDgoGc3RhdHVzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkytAkKEkFwcGxpY2F0aW9uU2VydmljZRJ0CgRMaXN0EiouYXF1YXJpdW0udjIuQXBwbGljYXRpb25TZXJ2aWNlTGlzdFJlcXVlc3QaKy5hcXVhcml1bS52Mi5BcHBsaWNhdGlvblNlcnZpY2VMaXN0UmVzcG9uc2UiE4K1GA8aBFVzZXIiB0xpc3RBbGwScAoDR2V0EikuYXF1YXJpdW0udjIuQXBwbGljYXRpb25TZXJ2aWNlR2V0UmVxdWVzdBoqLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUdldFJlc3BvbnNlIhKCtRgOGgRVc2VyIgZHZXRBbGwScQoGQ3JlYXRlEiwuYXF1YXJpdW0udjIuQXBwbGljYXRpb25TZXJ2aWNlQ3JlYXRlUmVxdWVzdBotLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUNyZWF0ZVJlc3BvbnNlIgqCtRgGGgRVc2VyEoQBCghHZXRTdGF0ZRIuLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUdldFN0YXRlUmVxdWVzdBovLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUdldFN0YXRlUmVzcG9uc2UiF4K1GBMaBFVzZXIiC0dldFN0YXRlQWxsEpABCgtHZXRSZXNvdXJjZRIxLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUdldFJlc291cmNlUmVxdWVzdBoyLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUdldFJlc291cmNlUmVzcG9uc2UiGoK1GBYaBFVzZXIiDkdldFJlc291cmNlQWxsEoUBCghMaXN0VGFzaxIuLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUxpc3RUYXNrUmVxdWVzdBovLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUxpc3RUYXNrUmVzcG9uc2UiGIK1GBQaBVBvd2VyIgtMaXN0VGFza0FsbBKNAQoKQ3JlYXRlVGFzaxIwLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUNyZWF0ZVRhc2tSZXF1ZXN0GjEuYXF1YXJpdW0udjIuQXBwbGljYXRpb25TZXJ2aWNlQ3JlYXRlVGFza1Jlc3BvbnNlIhqCtRgWGgVQb3dlciINQ3JlYXRlVGFza0FsbBKBAQoHR2V0VGFzaxItLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZUdldFRhc2tSZXF1ZXN0Gi4uYXF1YXJpdW0udjIuQXBwbGljYXRpb25TZXJ2aWNlR2V0VGFza1Jlc3BvbnNlIheCtRgTGgVQb3dlciIKR2V0VGFza0FsbBKMAQoKRGVhbGxvY2F0ZRIwLmFxdWFyaXVtLnYyLkFwcGxpY2F0aW9uU2VydmljZURlYWxsb2NhdGVSZXF1ZXN0GjEuYXF1YXJpdW0udjIuQXBwbGljYXRpb25TZXJ2aWNlRGVhbGxvY2F0ZVJlc3BvbnNlIhmCtRgVGgRVc2VyIg1EZWFsbG9jYXRlQWxsQkVaQ2dpdGh1Yi5jb20vYWRvYmUvYXF1YXJpdW0tZmlzaC9saWIvcnBjL3Byb3RvL2FxdWFyaXVtL3YyO2FxdWFyaXVtdjJiBnByb3RvMw", [file_google_protobuf_timestamp, file_google_protobuf_struct, file_aquarium_v2_common, file_aquarium_v2_options_rbac, file_aquarium_v2_options_streaming, file_aquarium_v2_options_ui]);

/**
 * Application represents an allocation request
 *
 * Allocation request created by the user. Each node votes for the availability to allocate
 * the ApplicationResource and the cluster choose which one node will actually do the work.
 *
 * @generated from message aquarium.v2.Application
 */
export type Application = Message<"aquarium.v2.Application"> & {
  /**
   * @generated from field: string uid = 1;
   */
  uid: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string owner_name = 3;
   */
  ownerName: string;

  /**
   * @generated from field: string label_uid = 4;
   */
  labelUid: string;

  /**
   * Additional metadata in JSON format (can't override Label metadata)
   * example:
   *   JENKINS_URL: 'http://172.16.1.1:8085/'
   *   JENKINS_AGENT_SECRET: 03839eabcf945b1e780be8f9488d264c4c57bf388546da9a84588345555f29b0
   *   JENKINS_AGENT_NAME: test-node
   *
   * @generated from field: google.protobuf.Struct metadata = 5;
   */
  metadata?: JsonObject;
};

/**
 * Describes the message aquarium.v2.Application.
 * Use `create(ApplicationSchema)` to create a new message.
 */
export const ApplicationSchema: GenMessage<Application> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 0);

/**
 * ApplicationState represents the current state of an application
 *
 * The state of the Application - it goes through graph of states, so this object stores the
 * info when the Application comes to this state and the last one describes the current state
 * of the Application.
 *
 * @generated from message aquarium.v2.ApplicationState
 */
export type ApplicationState = Message<"aquarium.v2.ApplicationState"> & {
  /**
   * @generated from field: string uid = 1;
   */
  uid: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string application_uid = 3;
   */
  applicationUid: string;

  /**
   * Status of the state - everything starts with new and could end in 2 states: DEALLOCATED or ERROR
   *
   * @generated from field: aquarium.v2.ApplicationState.Status status = 4;
   */
  status: ApplicationState_Status;

  /**
   * Additional information for the state
   *
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message aquarium.v2.ApplicationState.
 * Use `create(ApplicationStateSchema)` to create a new message.
 */
export const ApplicationStateSchema: GenMessage<ApplicationState> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 1);

/**
 * Enum for ApplicationState status field
 *
 * @generated from enum aquarium.v2.ApplicationState.Status
 */
export enum ApplicationState_Status {
  /**
   * Should not happen during regular operation
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The Application just created (active)
   *
   * @generated from enum value: NEW = 1;
   */
  NEW = 1,

  /**
   * Node is elected during the voting process (active)
   *
   * @generated from enum value: ELECTED = 2;
   */
  ELECTED = 2,

  /**
   * The ApplicationResource is allocated and starting up (active)
   *
   * @generated from enum value: ALLOCATED = 3;
   */
  ALLOCATED = 3,

  /**
   * User requested the Application deallocate (not active)
   *
   * @generated from enum value: DEALLOCATE = 4;
   */
  DEALLOCATE = 4,

  /**
   * The ApplicationResource is deallocated (not active)
   *
   * @generated from enum value: DEALLOCATED = 5;
   */
  DEALLOCATED = 5,

  /**
   * The error happened (not active)
   *
   * @generated from enum value: ERROR = 6;
   */
  ERROR = 6,
}

/**
 * Describes the enum aquarium.v2.ApplicationState.Status.
 */
export const ApplicationState_StatusSchema: GenEnum<ApplicationState_Status> = /*@__PURE__*/
  enumDesc(file_aquarium_v2_application, 1, 0);

/**
 * ApplicationResource represents a managed instance
 *
 * Managed instance definition to be able to properly restore the state during the cluster
 * node restart. Also contains additional info about the instance, for example user requested
 * metadata, which is available for the instance through the `Meta API`.
 *
 * Could be created and updated only by the node which won the Application execution.
 *
 * @generated from message aquarium.v2.ApplicationResource
 */
export type ApplicationResource = Message<"aquarium.v2.ApplicationResource"> & {
  /**
   * @generated from field: string uid = 1;
   */
  uid: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string application_uid = 4;
   */
  applicationUid: string;

  /**
   * @generated from field: string node_uid = 5;
   */
  nodeUid: string;

  /**
   * @generated from field: string label_uid = 6;
   */
  labelUid: string;

  /**
   * @generated from field: int32 definition_index = 7;
   */
  definitionIndex: number;

  /**
   * Unique for driver identifier of the instance which can be used to find it later.
   *
   * @generated from field: string identifier = 8;
   */
  identifier: string;

  /**
   * Is a weak current network IP address of the instance, usually gathered based on the `hw_addr`.
   *
   * @generated from field: string ip_addr = 9;
   */
  ipAddr: string;

  /**
   * MAC or any other type of network address which will allow to properly identify the node
   * through network interaction.
   *
   * @generated from field: string hw_addr = 10;
   */
  hwAddr: string;

  /**
   * Combined Application and Label metadata (in this order) to make it available through
   * `Meta API` to the instance.
   * example:
   *   JENKINS_URL: 'http://172.16.1.1:8085/'
   *   JENKINS_AGENT_SECRET: 03839eabcf945b1e780be8f9488d264c4c57bf388546da9a84588345555f29b0
   *   JENKINS_AGENT_NAME: test-node
   *   JENKINS_AGENT_WORKSPACE: /Volumes/ws
   *
   * @generated from field: google.protobuf.Struct metadata = 11;
   */
  metadata?: JsonObject;

  /**
   * Calculated during allocation time of when the Resource have to die anyway
   *
   * @generated from field: optional google.protobuf.Timestamp timeout = 12;
   */
  timeout?: Timestamp;

  /**
   * Authentication information for connection.
   *
   * @generated from field: optional aquarium.v2.Authentication authentication = 13;
   */
  authentication?: Authentication;
};

/**
 * Describes the message aquarium.v2.ApplicationResource.
 * Use `create(ApplicationResourceSchema)` to create a new message.
 */
export const ApplicationResourceSchema: GenMessage<ApplicationResource> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 2);

/**
 * ApplicationTask represents an async action on an application
 *
 * Is needed to execute sort of async action on the Application. For example snapshot
 * operation, because the request could get from anywhere. Usually app tasks are not a part of
 * standard Application state graph and could be not executed if the Applicationresource is
 * destroyed.
 *
 * Results are filled by the executor of the task and really depends on what kind of operation
 * is executed and really depends on the driver - it could support the task or not.
 *
 * It could be created by any Node but updated by the one which won the Application execution.
 *
 * @generated from message aquarium.v2.ApplicationTask
 */
export type ApplicationTask = Message<"aquarium.v2.ApplicationTask"> & {
  /**
   * @generated from field: string uid = 1;
   */
  uid: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string application_uid = 4;
   */
  applicationUid: string;

  /**
   * Identifier of the task
   *
   * @generated from field: string task = 5;
   */
  task: string;

  /**
   * Used to specify when the task should be executed, right now only
   * ALLOCATED, DEALLOCATE (when app is already here) are supported.
   *
   * @generated from field: aquarium.v2.ApplicationState.Status when = 6;
   */
  when: ApplicationState_Status;

  /**
   * Struct with additional options specific for the driver
   *
   * @generated from field: google.protobuf.Struct options = 7;
   */
  options?: JsonObject;

  /**
   * Struct with the results of task execution
   *
   * @generated from field: google.protobuf.Struct result = 8;
   */
  result?: JsonObject;
};

/**
 * Describes the message aquarium.v2.ApplicationTask.
 * Use `create(ApplicationTaskSchema)` to create a new message.
 */
export const ApplicationTaskSchema: GenMessage<ApplicationTask> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 3);

/**
 * @generated from message aquarium.v2.ApplicationServiceListRequest
 */
export type ApplicationServiceListRequest = Message<"aquarium.v2.ApplicationServiceListRequest"> & {
};

/**
 * Describes the message aquarium.v2.ApplicationServiceListRequest.
 * Use `create(ApplicationServiceListRequestSchema)` to create a new message.
 */
export const ApplicationServiceListRequestSchema: GenMessage<ApplicationServiceListRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 4);

/**
 * @generated from message aquarium.v2.ApplicationServiceListResponse
 */
export type ApplicationServiceListResponse = Message<"aquarium.v2.ApplicationServiceListResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: repeated aquarium.v2.Application data = 3;
   */
  data: Application[];
};

/**
 * Describes the message aquarium.v2.ApplicationServiceListResponse.
 * Use `create(ApplicationServiceListResponseSchema)` to create a new message.
 */
export const ApplicationServiceListResponseSchema: GenMessage<ApplicationServiceListResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 5);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetRequest
 */
export type ApplicationServiceGetRequest = Message<"aquarium.v2.ApplicationServiceGetRequest"> & {
  /**
   * @generated from field: string application_uid = 1;
   */
  applicationUid: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetRequest.
 * Use `create(ApplicationServiceGetRequestSchema)` to create a new message.
 */
export const ApplicationServiceGetRequestSchema: GenMessage<ApplicationServiceGetRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 6);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetResponse
 */
export type ApplicationServiceGetResponse = Message<"aquarium.v2.ApplicationServiceGetResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.Application data = 3;
   */
  data?: Application;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetResponse.
 * Use `create(ApplicationServiceGetResponseSchema)` to create a new message.
 */
export const ApplicationServiceGetResponseSchema: GenMessage<ApplicationServiceGetResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 7);

/**
 * @generated from message aquarium.v2.ApplicationServiceCreateRequest
 */
export type ApplicationServiceCreateRequest = Message<"aquarium.v2.ApplicationServiceCreateRequest"> & {
  /**
   * @generated from field: aquarium.v2.Application application = 1;
   */
  application?: Application;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceCreateRequest.
 * Use `create(ApplicationServiceCreateRequestSchema)` to create a new message.
 */
export const ApplicationServiceCreateRequestSchema: GenMessage<ApplicationServiceCreateRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 8);

/**
 * @generated from message aquarium.v2.ApplicationServiceCreateResponse
 */
export type ApplicationServiceCreateResponse = Message<"aquarium.v2.ApplicationServiceCreateResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.Application data = 3;
   */
  data?: Application;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceCreateResponse.
 * Use `create(ApplicationServiceCreateResponseSchema)` to create a new message.
 */
export const ApplicationServiceCreateResponseSchema: GenMessage<ApplicationServiceCreateResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 9);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetStateRequest
 */
export type ApplicationServiceGetStateRequest = Message<"aquarium.v2.ApplicationServiceGetStateRequest"> & {
  /**
   * @generated from field: string application_uid = 1;
   */
  applicationUid: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetStateRequest.
 * Use `create(ApplicationServiceGetStateRequestSchema)` to create a new message.
 */
export const ApplicationServiceGetStateRequestSchema: GenMessage<ApplicationServiceGetStateRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 10);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetStateResponse
 */
export type ApplicationServiceGetStateResponse = Message<"aquarium.v2.ApplicationServiceGetStateResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.ApplicationState data = 3;
   */
  data?: ApplicationState;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetStateResponse.
 * Use `create(ApplicationServiceGetStateResponseSchema)` to create a new message.
 */
export const ApplicationServiceGetStateResponseSchema: GenMessage<ApplicationServiceGetStateResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 11);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetResourceRequest
 */
export type ApplicationServiceGetResourceRequest = Message<"aquarium.v2.ApplicationServiceGetResourceRequest"> & {
  /**
   * @generated from field: string application_uid = 1;
   */
  applicationUid: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetResourceRequest.
 * Use `create(ApplicationServiceGetResourceRequestSchema)` to create a new message.
 */
export const ApplicationServiceGetResourceRequestSchema: GenMessage<ApplicationServiceGetResourceRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 12);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetResourceResponse
 */
export type ApplicationServiceGetResourceResponse = Message<"aquarium.v2.ApplicationServiceGetResourceResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.ApplicationResource data = 3;
   */
  data?: ApplicationResource;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetResourceResponse.
 * Use `create(ApplicationServiceGetResourceResponseSchema)` to create a new message.
 */
export const ApplicationServiceGetResourceResponseSchema: GenMessage<ApplicationServiceGetResourceResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 13);

/**
 * @generated from message aquarium.v2.ApplicationServiceListTaskRequest
 */
export type ApplicationServiceListTaskRequest = Message<"aquarium.v2.ApplicationServiceListTaskRequest"> & {
  /**
   * @generated from field: string application_uid = 1;
   */
  applicationUid: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceListTaskRequest.
 * Use `create(ApplicationServiceListTaskRequestSchema)` to create a new message.
 */
export const ApplicationServiceListTaskRequestSchema: GenMessage<ApplicationServiceListTaskRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 14);

/**
 * @generated from message aquarium.v2.ApplicationServiceListTaskResponse
 */
export type ApplicationServiceListTaskResponse = Message<"aquarium.v2.ApplicationServiceListTaskResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: repeated aquarium.v2.ApplicationTask data = 3;
   */
  data: ApplicationTask[];
};

/**
 * Describes the message aquarium.v2.ApplicationServiceListTaskResponse.
 * Use `create(ApplicationServiceListTaskResponseSchema)` to create a new message.
 */
export const ApplicationServiceListTaskResponseSchema: GenMessage<ApplicationServiceListTaskResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 15);

/**
 * @generated from message aquarium.v2.ApplicationServiceCreateTaskRequest
 */
export type ApplicationServiceCreateTaskRequest = Message<"aquarium.v2.ApplicationServiceCreateTaskRequest"> & {
  /**
   * @generated from field: string application_uid = 1;
   */
  applicationUid: string;

  /**
   * @generated from field: aquarium.v2.ApplicationTask task = 2;
   */
  task?: ApplicationTask;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceCreateTaskRequest.
 * Use `create(ApplicationServiceCreateTaskRequestSchema)` to create a new message.
 */
export const ApplicationServiceCreateTaskRequestSchema: GenMessage<ApplicationServiceCreateTaskRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 16);

/**
 * @generated from message aquarium.v2.ApplicationServiceCreateTaskResponse
 */
export type ApplicationServiceCreateTaskResponse = Message<"aquarium.v2.ApplicationServiceCreateTaskResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.ApplicationTask data = 3;
   */
  data?: ApplicationTask;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceCreateTaskResponse.
 * Use `create(ApplicationServiceCreateTaskResponseSchema)` to create a new message.
 */
export const ApplicationServiceCreateTaskResponseSchema: GenMessage<ApplicationServiceCreateTaskResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 17);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetTaskRequest
 */
export type ApplicationServiceGetTaskRequest = Message<"aquarium.v2.ApplicationServiceGetTaskRequest"> & {
  /**
   * @generated from field: string application_task_uid = 1;
   */
  applicationTaskUid: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetTaskRequest.
 * Use `create(ApplicationServiceGetTaskRequestSchema)` to create a new message.
 */
export const ApplicationServiceGetTaskRequestSchema: GenMessage<ApplicationServiceGetTaskRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 18);

/**
 * @generated from message aquarium.v2.ApplicationServiceGetTaskResponse
 */
export type ApplicationServiceGetTaskResponse = Message<"aquarium.v2.ApplicationServiceGetTaskResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.ApplicationTask data = 3;
   */
  data?: ApplicationTask;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceGetTaskResponse.
 * Use `create(ApplicationServiceGetTaskResponseSchema)` to create a new message.
 */
export const ApplicationServiceGetTaskResponseSchema: GenMessage<ApplicationServiceGetTaskResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 19);

/**
 * @generated from message aquarium.v2.ApplicationServiceDeallocateRequest
 */
export type ApplicationServiceDeallocateRequest = Message<"aquarium.v2.ApplicationServiceDeallocateRequest"> & {
  /**
   * @generated from field: string application_uid = 1;
   */
  applicationUid: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceDeallocateRequest.
 * Use `create(ApplicationServiceDeallocateRequestSchema)` to create a new message.
 */
export const ApplicationServiceDeallocateRequestSchema: GenMessage<ApplicationServiceDeallocateRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 20);

/**
 * @generated from message aquarium.v2.ApplicationServiceDeallocateResponse
 */
export type ApplicationServiceDeallocateResponse = Message<"aquarium.v2.ApplicationServiceDeallocateResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message aquarium.v2.ApplicationServiceDeallocateResponse.
 * Use `create(ApplicationServiceDeallocateResponseSchema)` to create a new message.
 */
export const ApplicationServiceDeallocateResponseSchema: GenMessage<ApplicationServiceDeallocateResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_application, 21);

/**
 * ApplicationService handles application management operations
 *
 * @generated from service aquarium.v2.ApplicationService
 */
export const ApplicationService: GenService<{
  /**
   * Get list of applications
   *
   * @generated from rpc aquarium.v2.ApplicationService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ApplicationServiceListRequestSchema;
    output: typeof ApplicationServiceListResponseSchema;
  },
  /**
   * Get application by UID
   *
   * @generated from rpc aquarium.v2.ApplicationService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof ApplicationServiceGetRequestSchema;
    output: typeof ApplicationServiceGetResponseSchema;
  },
  /**
   * Create new application
   *
   * @generated from rpc aquarium.v2.ApplicationService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof ApplicationServiceCreateRequestSchema;
    output: typeof ApplicationServiceCreateResponseSchema;
  },
  /**
   * Get application state
   *
   * @generated from rpc aquarium.v2.ApplicationService.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof ApplicationServiceGetStateRequestSchema;
    output: typeof ApplicationServiceGetStateResponseSchema;
  },
  /**
   * Get application resource
   *
   * @generated from rpc aquarium.v2.ApplicationService.GetResource
   */
  getResource: {
    methodKind: "unary";
    input: typeof ApplicationServiceGetResourceRequestSchema;
    output: typeof ApplicationServiceGetResourceResponseSchema;
  },
  /**
   * List application tasks
   *
   * @generated from rpc aquarium.v2.ApplicationService.ListTask
   */
  listTask: {
    methodKind: "unary";
    input: typeof ApplicationServiceListTaskRequestSchema;
    output: typeof ApplicationServiceListTaskResponseSchema;
  },
  /**
   * Create application task
   *
   * @generated from rpc aquarium.v2.ApplicationService.CreateTask
   */
  createTask: {
    methodKind: "unary";
    input: typeof ApplicationServiceCreateTaskRequestSchema;
    output: typeof ApplicationServiceCreateTaskResponseSchema;
  },
  /**
   * Get application task
   *
   * @generated from rpc aquarium.v2.ApplicationService.GetTask
   */
  getTask: {
    methodKind: "unary";
    input: typeof ApplicationServiceGetTaskRequestSchema;
    output: typeof ApplicationServiceGetTaskResponseSchema;
  },
  /**
   * Deallocate application
   *
   * @generated from rpc aquarium.v2.ApplicationService.Deallocate
   */
  deallocate: {
    methodKind: "unary";
    input: typeof ApplicationServiceDeallocateRequestSchema;
    output: typeof ApplicationServiceDeallocateResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_aquarium_v2_application, 0);

