// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file aquarium/v2/application.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ApplicationServiceCreateRequest, ApplicationServiceCreateResponse, ApplicationServiceCreateTaskRequest, ApplicationServiceCreateTaskResponse, ApplicationServiceDeallocateRequest, ApplicationServiceDeallocateResponse, ApplicationServiceGetRequest, ApplicationServiceGetResourceRequest, ApplicationServiceGetResourceResponse, ApplicationServiceGetResponse, ApplicationServiceGetStateRequest, ApplicationServiceGetStateResponse, ApplicationServiceGetTaskRequest, ApplicationServiceGetTaskResponse, ApplicationServiceListRequest, ApplicationServiceListResponse, ApplicationServiceListTaskRequest, ApplicationServiceListTaskResponse } from "./application_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ApplicationService handles application management operations
 *
 * @generated from service aquarium.v2.ApplicationService
 */
export const ApplicationService = {
  typeName: "aquarium.v2.ApplicationService",
  methods: {
    /**
     * Get list of applications
     *
     * @generated from rpc aquarium.v2.ApplicationService.List
     */
    list: {
      name: "List",
      I: ApplicationServiceListRequest,
      O: ApplicationServiceListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get application by UID
     *
     * @generated from rpc aquarium.v2.ApplicationService.Get
     */
    get: {
      name: "Get",
      I: ApplicationServiceGetRequest,
      O: ApplicationServiceGetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create new application
     *
     * @generated from rpc aquarium.v2.ApplicationService.Create
     */
    create: {
      name: "Create",
      I: ApplicationServiceCreateRequest,
      O: ApplicationServiceCreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get application state
     *
     * @generated from rpc aquarium.v2.ApplicationService.GetState
     */
    getState: {
      name: "GetState",
      I: ApplicationServiceGetStateRequest,
      O: ApplicationServiceGetStateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get application resource
     *
     * @generated from rpc aquarium.v2.ApplicationService.GetResource
     */
    getResource: {
      name: "GetResource",
      I: ApplicationServiceGetResourceRequest,
      O: ApplicationServiceGetResourceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List application tasks
     *
     * @generated from rpc aquarium.v2.ApplicationService.ListTask
     */
    listTask: {
      name: "ListTask",
      I: ApplicationServiceListTaskRequest,
      O: ApplicationServiceListTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create application task
     *
     * @generated from rpc aquarium.v2.ApplicationService.CreateTask
     */
    createTask: {
      name: "CreateTask",
      I: ApplicationServiceCreateTaskRequest,
      O: ApplicationServiceCreateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get application task
     *
     * @generated from rpc aquarium.v2.ApplicationService.GetTask
     */
    getTask: {
      name: "GetTask",
      I: ApplicationServiceGetTaskRequest,
      O: ApplicationServiceGetTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deallocate application
     *
     * @generated from rpc aquarium.v2.ApplicationService.Deallocate
     */
    deallocate: {
      name: "Deallocate",
      I: ApplicationServiceDeallocateRequest,
      O: ApplicationServiceDeallocateResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

