// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// Contains options for rpc's to alter RBAC behavior
// Example:
// rpc GetMe(UserServiceGetMeRequest) returns (UserServiceGetMeResponse) {
//   option (access_control) = {
//     allow_unauthenticated: false,
//     allowed_roles: ["User", "Administrator"]
//   };
// }

// @generated by protoc-gen-es v2.6.1 with parameter "target=ts"
// @generated from file aquarium/v2/options_rbac.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */

import type { GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { MethodOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file aquarium/v2/options_rbac.proto.
 */
export const file_aquarium_v2_options_rbac: GenFile = /*@__PURE__*/
  fileDesc("Ch5hcXVhcml1bS92Mi9vcHRpb25zX3JiYWMucHJvdG8SC2FxdWFyaXVtLnYyIsUBChZSb2xlQmFzZWRBY2Nlc3NDb250cm9sEiIKFWFsbG93X3VuYXV0aGVudGljYXRlZBgBIAEoCEgAiAEBEiEKFG5vX3Blcm1pc3Npb25fbmVlZGVkGAIgASgISAGIAQESFQoNYWxsb3dlZF9yb2xlcxgDIAMoCRIaChJhZGRpdGlvbmFsX2FjdGlvbnMYBCADKAlCGAoWX2FsbG93X3VuYXV0aGVudGljYXRlZEIXChVfbm9fcGVybWlzc2lvbl9uZWVkZWQ6bwoOYWNjZXNzX2NvbnRyb2wSHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjQhgMgASgLMiMuYXF1YXJpdW0udjIuUm9sZUJhc2VkQWNjZXNzQ29udHJvbFINYWNjZXNzQ29udHJvbIgBAUJFWkNnaXRodWIuY29tL2Fkb2JlL2FxdWFyaXVtLWZpc2gvbGliL3JwYy9wcm90by9hcXVhcml1bS92MjthcXVhcml1bXYyYgZwcm90bzM", [file_google_protobuf_descriptor]);

/**
 * RoleBasedAccessControl defines the RBAC policy for a method
 *
 * @generated from message aquarium.v2.RoleBasedAccessControl
 */
export type RoleBasedAccessControl = Message<"aquarium.v2.RoleBasedAccessControl"> & {
  /**
   * Whether unauthenticated access is allowed
   *
   * @generated from field: optional bool allow_unauthenticated = 1;
   */
  allowUnauthenticated?: boolean;

  /**
   * @generated from field: optional bool no_permission_needed = 2;
   */
  noPermissionNeeded?: boolean;

  /**
   * List of roles that are allowed to access this method
   * If empty, only Administrator role is allowed
   *
   * @generated from field: repeated string allowed_roles = 3;
   */
  allowedRoles: string[];

  /**
   * List of additional actions used by the RPC method
   *
   * @generated from field: repeated string additional_actions = 4;
   */
  additionalActions: string[];
};

/**
 * Describes the message aquarium.v2.RoleBasedAccessControl.
 * Use `create(RoleBasedAccessControlSchema)` to create a new message.
 */
export const RoleBasedAccessControlSchema: GenMessage<RoleBasedAccessControl> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_options_rbac, 0);

/**
 * Access control options for the method
 *
 * @generated from extension: optional aquarium.v2.RoleBasedAccessControl access_control = 50000;
 */
export const access_control: GenExtension<MethodOptions, RoleBasedAccessControl> = /*@__PURE__*/
  extDesc(file_aquarium_v2_options_rbac, 0);

