// Copyright 2025 Adobe. All rights reserved.
// This file is licensed to you under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
// OF ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.

// Author: Sergei Parshev (@sparshev)

// @generated by protoc-gen-es v2.6.2 with parameter "target=ts"
// @generated from file aquarium/v2/role.proto (package aquarium.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_aquarium_v2_options_streaming } from "./options_streaming_pb";
import { file_aquarium_v2_options_ui } from "./options_ui_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file aquarium/v2/role.proto.
 */
export const file_aquarium_v2_role: GenFile = /*@__PURE__*/
  fileDesc("ChZhcXVhcml1bS92Mi9yb2xlLnByb3RvEgthcXVhcml1bS52MiLSAQoEUm9sZRIMCgRuYW1lGAEgASgJEjgKCmNyZWF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgiatRgECAEQARI4Cgp1cGRhdGVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIImrUYBAgBEAESLAoLcGVybWlzc2lvbnMYBCADKAsyFy5hcXVhcml1bS52Mi5QZXJtaXNzaW9uOhqKtRgQCg5Sb2xlU2VydmljZUdldJK1GAIIASI2CgpQZXJtaXNzaW9uEhAKCHJlc291cmNlGAEgASgJEg4KBmFjdGlvbhgCIAEoCToGkrUYAggBIhgKFlJvbGVTZXJ2aWNlTGlzdFJlcXVlc3QiWwoXUm9sZVNlcnZpY2VMaXN0UmVzcG9uc2USDgoGc3RhdHVzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkSHwoEZGF0YRgDIAMoCzIRLmFxdWFyaXVtLnYyLlJvbGUiKgoVUm9sZVNlcnZpY2VHZXRSZXF1ZXN0EhEKCXJvbGVfbmFtZRgBIAEoCSJaChZSb2xlU2VydmljZUdldFJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEh8KBGRhdGEYAyABKAsyES5hcXVhcml1bS52Mi5Sb2xlIjsKGFJvbGVTZXJ2aWNlQ3JlYXRlUmVxdWVzdBIfCgRyb2xlGAEgASgLMhEuYXF1YXJpdW0udjIuUm9sZSJdChlSb2xlU2VydmljZUNyZWF0ZVJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEh8KBGRhdGEYAyABKAsyES5hcXVhcml1bS52Mi5Sb2xlIjsKGFJvbGVTZXJ2aWNlVXBkYXRlUmVxdWVzdBIfCgRyb2xlGAEgASgLMhEuYXF1YXJpdW0udjIuUm9sZSJdChlSb2xlU2VydmljZVVwZGF0ZVJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEh8KBGRhdGEYAyABKAsyES5hcXVhcml1bS52Mi5Sb2xlIi0KGFJvbGVTZXJ2aWNlUmVtb3ZlUmVxdWVzdBIRCglyb2xlX25hbWUYASABKAkiPAoZUm9sZVNlcnZpY2VSZW1vdmVSZXNwb25zZRIOCgZzdGF0dXMYASABKAgSDwoHbWVzc2FnZRgCIAEoCTLFAwoLUm9sZVNlcnZpY2USUwoETGlzdBIjLmFxdWFyaXVtLnYyLlJvbGVTZXJ2aWNlTGlzdFJlcXVlc3QaJC5hcXVhcml1bS52Mi5Sb2xlU2VydmljZUxpc3RSZXNwb25zZSIAElAKA0dldBIiLmFxdWFyaXVtLnYyLlJvbGVTZXJ2aWNlR2V0UmVxdWVzdBojLmFxdWFyaXVtLnYyLlJvbGVTZXJ2aWNlR2V0UmVzcG9uc2UiABJZCgZDcmVhdGUSJS5hcXVhcml1bS52Mi5Sb2xlU2VydmljZUNyZWF0ZVJlcXVlc3QaJi5hcXVhcml1bS52Mi5Sb2xlU2VydmljZUNyZWF0ZVJlc3BvbnNlIgASWQoGVXBkYXRlEiUuYXF1YXJpdW0udjIuUm9sZVNlcnZpY2VVcGRhdGVSZXF1ZXN0GiYuYXF1YXJpdW0udjIuUm9sZVNlcnZpY2VVcGRhdGVSZXNwb25zZSIAElkKBlJlbW92ZRIlLmFxdWFyaXVtLnYyLlJvbGVTZXJ2aWNlUmVtb3ZlUmVxdWVzdBomLmFxdWFyaXVtLnYyLlJvbGVTZXJ2aWNlUmVtb3ZlUmVzcG9uc2UiAEJFWkNnaXRodWIuY29tL2Fkb2JlL2FxdWFyaXVtLWZpc2gvbGliL3JwYy9wcm90by9hcXVhcml1bS92MjthcXVhcml1bXYyYgZwcm90bzM", [file_google_protobuf_timestamp, file_aquarium_v2_options_streaming, file_aquarium_v2_options_ui]);

/**
 * Role represents a role in the RBAC system
 *
 * Defines a role in the RBAC system with associated permissions.
 *
 * @generated from message aquarium.v2.Role
 */
export type Role = Message<"aquarium.v2.Role"> & {
  /**
   * Unique name of the role
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * List of permissions granted to this role
   *
   * @generated from field: repeated aquarium.v2.Permission permissions = 4;
   */
  permissions: Permission[];
};

/**
 * Describes the message aquarium.v2.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 0);

/**
 * Permission represents a permission that can be granted to roles
 *
 * Defines a permission that can be granted to roles.
 *
 * @generated from message aquarium.v2.Permission
 */
export type Permission = Message<"aquarium.v2.Permission"> & {
  /**
   * Resource type or specific resource ID this permission applies to
   *
   * @generated from field: string resource = 1;
   */
  resource: string;

  /**
   * Action allowed on the resource (e.g., read, write, remove)
   *
   * @generated from field: string action = 2;
   */
  action: string;
};

/**
 * Describes the message aquarium.v2.Permission.
 * Use `create(PermissionSchema)` to create a new message.
 */
export const PermissionSchema: GenMessage<Permission> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 1);

/**
 * @generated from message aquarium.v2.RoleServiceListRequest
 */
export type RoleServiceListRequest = Message<"aquarium.v2.RoleServiceListRequest"> & {
};

/**
 * Describes the message aquarium.v2.RoleServiceListRequest.
 * Use `create(RoleServiceListRequestSchema)` to create a new message.
 */
export const RoleServiceListRequestSchema: GenMessage<RoleServiceListRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 2);

/**
 * @generated from message aquarium.v2.RoleServiceListResponse
 */
export type RoleServiceListResponse = Message<"aquarium.v2.RoleServiceListResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: repeated aquarium.v2.Role data = 3;
   */
  data: Role[];
};

/**
 * Describes the message aquarium.v2.RoleServiceListResponse.
 * Use `create(RoleServiceListResponseSchema)` to create a new message.
 */
export const RoleServiceListResponseSchema: GenMessage<RoleServiceListResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 3);

/**
 * @generated from message aquarium.v2.RoleServiceGetRequest
 */
export type RoleServiceGetRequest = Message<"aquarium.v2.RoleServiceGetRequest"> & {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName: string;
};

/**
 * Describes the message aquarium.v2.RoleServiceGetRequest.
 * Use `create(RoleServiceGetRequestSchema)` to create a new message.
 */
export const RoleServiceGetRequestSchema: GenMessage<RoleServiceGetRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 4);

/**
 * @generated from message aquarium.v2.RoleServiceGetResponse
 */
export type RoleServiceGetResponse = Message<"aquarium.v2.RoleServiceGetResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.Role data = 3;
   */
  data?: Role;
};

/**
 * Describes the message aquarium.v2.RoleServiceGetResponse.
 * Use `create(RoleServiceGetResponseSchema)` to create a new message.
 */
export const RoleServiceGetResponseSchema: GenMessage<RoleServiceGetResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 5);

/**
 * @generated from message aquarium.v2.RoleServiceCreateRequest
 */
export type RoleServiceCreateRequest = Message<"aquarium.v2.RoleServiceCreateRequest"> & {
  /**
   * @generated from field: aquarium.v2.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message aquarium.v2.RoleServiceCreateRequest.
 * Use `create(RoleServiceCreateRequestSchema)` to create a new message.
 */
export const RoleServiceCreateRequestSchema: GenMessage<RoleServiceCreateRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 6);

/**
 * @generated from message aquarium.v2.RoleServiceCreateResponse
 */
export type RoleServiceCreateResponse = Message<"aquarium.v2.RoleServiceCreateResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.Role data = 3;
   */
  data?: Role;
};

/**
 * Describes the message aquarium.v2.RoleServiceCreateResponse.
 * Use `create(RoleServiceCreateResponseSchema)` to create a new message.
 */
export const RoleServiceCreateResponseSchema: GenMessage<RoleServiceCreateResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 7);

/**
 * @generated from message aquarium.v2.RoleServiceUpdateRequest
 */
export type RoleServiceUpdateRequest = Message<"aquarium.v2.RoleServiceUpdateRequest"> & {
  /**
   * @generated from field: aquarium.v2.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message aquarium.v2.RoleServiceUpdateRequest.
 * Use `create(RoleServiceUpdateRequestSchema)` to create a new message.
 */
export const RoleServiceUpdateRequestSchema: GenMessage<RoleServiceUpdateRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 8);

/**
 * @generated from message aquarium.v2.RoleServiceUpdateResponse
 */
export type RoleServiceUpdateResponse = Message<"aquarium.v2.RoleServiceUpdateResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: aquarium.v2.Role data = 3;
   */
  data?: Role;
};

/**
 * Describes the message aquarium.v2.RoleServiceUpdateResponse.
 * Use `create(RoleServiceUpdateResponseSchema)` to create a new message.
 */
export const RoleServiceUpdateResponseSchema: GenMessage<RoleServiceUpdateResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 9);

/**
 * @generated from message aquarium.v2.RoleServiceRemoveRequest
 */
export type RoleServiceRemoveRequest = Message<"aquarium.v2.RoleServiceRemoveRequest"> & {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName: string;
};

/**
 * Describes the message aquarium.v2.RoleServiceRemoveRequest.
 * Use `create(RoleServiceRemoveRequestSchema)` to create a new message.
 */
export const RoleServiceRemoveRequestSchema: GenMessage<RoleServiceRemoveRequest> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 10);

/**
 * @generated from message aquarium.v2.RoleServiceRemoveResponse
 */
export type RoleServiceRemoveResponse = Message<"aquarium.v2.RoleServiceRemoveResponse"> & {
  /**
   * @generated from field: bool status = 1;
   */
  status: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message aquarium.v2.RoleServiceRemoveResponse.
 * Use `create(RoleServiceRemoveResponseSchema)` to create a new message.
 */
export const RoleServiceRemoveResponseSchema: GenMessage<RoleServiceRemoveResponse> = /*@__PURE__*/
  messageDesc(file_aquarium_v2_role, 11);

/**
 * RoleService handles role management operations
 *
 * @generated from service aquarium.v2.RoleService
 */
export const RoleService: GenService<{
  /**
   * Get list of roles
   *
   * @generated from rpc aquarium.v2.RoleService.List
   */
  list: {
    methodKind: "unary";
    input: typeof RoleServiceListRequestSchema;
    output: typeof RoleServiceListResponseSchema;
  },
  /**
   * Get role by name
   *
   * @generated from rpc aquarium.v2.RoleService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof RoleServiceGetRequestSchema;
    output: typeof RoleServiceGetResponseSchema;
  },
  /**
   * Create new role
   *
   * @generated from rpc aquarium.v2.RoleService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof RoleServiceCreateRequestSchema;
    output: typeof RoleServiceCreateResponseSchema;
  },
  /**
   * Update existing role
   *
   * @generated from rpc aquarium.v2.RoleService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof RoleServiceUpdateRequestSchema;
    output: typeof RoleServiceUpdateResponseSchema;
  },
  /**
   * Remove role
   *
   * @generated from rpc aquarium.v2.RoleService.Remove
   */
  remove: {
    methodKind: "unary";
    input: typeof RoleServiceRemoveRequestSchema;
    output: typeof RoleServiceRemoveResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_aquarium_v2_role, 0);

